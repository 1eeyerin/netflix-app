{"version":3,"sources":["views/components/AppBar/AppBar.Styled.js","views/components/AppBar/index.js","views/components/AppLayout/index.js","utils/index.js","views/components/MovieList/MovieListController.js","views/components/MovieList/MovieItem.Styled.js","views/components/MovieList/MovieItem.js","views/components/MovieList/index.js","views/components/AppLayout/AppLayout.Styled.js","views/pages/Home/MainList.js","views/pages/Home/index.js","views/pages/Detail/MovieDetail.Styled.js","views/pages/Detail/MovieDetail.js","views/pages/Detail/index.Styled.js","redux/app/redux.js","redux/user/redux.js","redux/reducers.js","api/index.js","redux/app/saga.js","redux/user/saga.js","redux/sagas.js","redux/store.js","redux/actionCreators.js","views/pages/Detail/DetailController.js","views/pages/Detail/index.js","views/pages/Genre/GenreList.js","views/pages/Genre/index.js","views/pages/Search/index.js","views/pages/Member/Login/index.Styled.js","views/pages/Member/Login/LoginForm.js","views/pages/Member/Login/SubmitController.js","views/pages/Member/Login/index.js","views/pages/Member/MyList/MyMovieList.js","views/pages/Member/MyList/index.js","views/pages/Member/Join/index.Styled.js","views/pages/Member/Join/JoinForm.js","utils/validation.js","hooks/useForm.js","views/pages/Member/Join/SubmitController.js","views/pages/Member/Join/index.js","views/pages/Member/Profile/index.js","views/pages/Member/Logout/index.js","views/pages/Member/index.js","style/theme.js","utils/scrollToTop.js","App.js","index.js"],"names":["Header","styled","header","HeaderWrap","div","props","theme","mainColor","HeaderLeft","HeaderRight","AppBar","useSelector","state","user","isLoggedIn","to","Container","MainContainer","main","AppLayout","children","utils","name","item","target","sort","a","b","assending","descending","Math","random","toString","substring","MovieListController","Movies","myList","bestMovies","result","el","val","sorting","length","filter","i","genres","indexOf","map","find","m","id","MovieSlider","Slider","MovieListItem","ItemImage","ItemIMG","img","ItemTitle","h3","MovieItem","settings","src","large_cover_image","alt","title","className","List","MovieList","itemlistTitle","Boolean","MainArea","MainList","MovieListFilter","nickname","Home","app","LoginData","dots","infinite","speed","slidesToShow","slidesToScroll","touchMove","MovieInfo","ItemGroup","mobile","ColLeft","PosterImage","PosterIMG","ColRight","Title","h2","Year","Rating","Runtime","Description","Genre","Genres","span","OtherMovies","OtherMovieList","LikeButton","button","HeartIcon","RiHeartAddLine","AddedLikeList","AddLikeList","MovieDetail","post","otherPost","isLiked","toggleLikeButton","medium_cover_image","type","onClick","cn","active","title_long","year","rating","description_full","runtime","idx","undefined","DetailGroup","background","MainAreaStyled","initialState","openSidebar","Action","Types","UPDATE_STATE","GET_MOVIES","Creators","updateState","payload","getMovies","Users","userId","userPassword","SearchList","ADDED_USER","ADD_MYLIST","REMOVE_MYLIST","addedUser","addMyList","removeMyList","reducers","combineReducers","action","produce","draft","push","unshift","splice","dotenv","config","axios","defaults","baseURL","process","console","log","SITE_URL","API","get","saga","all","takeLatest","call","data","put","movies","sagas","appSaga","userSaga","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","dispatch","appActions","bindActionCreators","AppAction","userActions","UserAction","DetailController","useState","setIsLiked","setPost","setOtherPost","useEffect","postResult","likedListResult","genreArr","otherPostResult","includes","Detail","match","Number","params","background_image_original","GenreList","Search","LoginGroup","FormStyled","Form","LoginForm","form","handleSubmit","onFinish","Item","prefix","UserOutlined","placeholder","LockOutlined","htmlType","SubmitController","history","isSuccessIn","setIsSuccessIn","useCallback","alert","resetFields","values","Login","useForm","setBackground","floor","ErrorMessage","Message","MyMovieList","MyList","JoinGroup","FormErrorMessage","JoinForm","handleOnChange","error","value","onChange","e","Password","password","verifyPassword","validVerifyPassword","current","validate","required","newError","validId","validPassword","validNickname","storeDispatch","buildDispatch","setUser","setError","updateInfo","resultValue","Object","every","Join","obj","arg","Profile","Logout","Member","path","component","size","tablet","laptop","desktop","ScrollToTop","pathname","useLocation","window","scrollTo","App","atEnter","opacity","atLeave","atActive","exact","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7bb95443.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  border-bottom: 1px solid #333;\n  background: #121212;\n  font-size: 13px;\n`\nexport const HeaderWrap = styled.div`\n  height: 50px;\n  max-width: 1400px;\n  margin: 0 auto;\n  width: 93%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  h1 {\n    margin-right: 10px;\n    color: ${(props) => props.theme.mainColor};\n    font-weight: 500;\n    font-family: 'Montserrat', sans-serif;\n    display: flex;\n    align-items: center;\n  }\n\n  ul {\n    display: flex;\n    align-items: center;\n    height: 50px;\n\n    li {\n      padding: 0 20px;\n    }\n  }\n`\nexport const HeaderLeft = styled.div`\n  display: flex;\n  align-content: center;\n`\nexport const HeaderRight = styled.div`\n`\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {Header, HeaderLeft, HeaderRight, HeaderWrap} from \"./AppBar.Styled\";\nimport {useSelector} from \"react-redux\";\n\nfunction AppBar() {\n\n    const {\n        isLoggedIn = false\n    } = useSelector(state => state.user);\n\n    return (\n        <Header>\n            <HeaderWrap>\n                <HeaderLeft>\n                    <h1><Link to=\"/\">Movie App</Link></h1>\n                    <ul>\n                        <li><Link to=\"/genre\">Genre</Link></li>\n                        {isLoggedIn && <li><Link to=\"/member/my-list\">MyList</Link></li>}\n                        <li><Link to=\"/search\">Search</Link></li>\n                    </ul>\n                </HeaderLeft>\n                <HeaderRight>\n                    <ul>\n                        {isLoggedIn ? (\n                            <>\n                                <li><Link to=\"/member/profile\">profile</Link></li>\n                                <li><Link to=\"/member/logout\">logout</Link></li>\n                            </>\n                        ) : (\n                            <li><Link to=\"/member/login\">login</Link></li>\n                        )}\n                    </ul>\n                </HeaderRight>\n            </HeaderWrap>\n        </Header>\n    )\n}\n\nexport default AppBar;","import React from \"react\";\nimport styled from \"styled-components\";\nimport AppBar from \"../AppBar\";\n\nfunction AppLayout({children}){\n\n    return(\n        <Container>\n            <AppBar />\n            <MainContainer>\n                {children}\n            </MainContainer>\n        </Container>\n    )\n}\nconst Container = styled.div`\n  font-size: 13px;\n`\nconst MainContainer = styled.main`\n`\n\nexport default AppLayout;","const assending = (item, target) => {\n    return item && item.sort(function (a, b) {\n        return a[target] - b[target];\n    })\n}\nconst descending = (item, target) => {\n    return item && item.sort(function (a, b) {\n        return b[target] - a[target];\n    })\n}\nconst guid = () => {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\n\nfunction utils({name, item, target}) {\n    if(name === \"assending\") {\n        return assending(item, target);\n    }\n    if(name === \"descending\") {\n       return  descending(item, target);\n    }\n    if(name === \"guid\") {\n        return guid();\n    }\n}\n\n\nexport default utils;","import React from \"react\";\nimport utils from \"../../../utils\";\n\nfunction MovieListController({Movies, myList, bestMovies}){\n\n    const MovieListFilter = ({el, val, sorting}) => {\n        let result;\n\n        if(el === \"genres\") {\n            result =  Movies.length && Movies.filter((i) => i.genres.indexOf(val) !== -1);\n        }\n        if(el === \"myList\") {\n            result =  myList && myList.map(item => Movies.find(m => m.id === item));\n        }\n        if(el === \"recommend\") {\n            result =  Movies.length && bestMovies.map(item => Movies.find(m => m.id === item));\n        }\n        if(sorting !== false) {\n            result = utils({name:\"descending\", item: result, target:\"rating\"});\n        }\n\n        return result;\n    }\n\n    return [MovieListFilter];\n}\n\nexport default MovieListController;","import styled from \"styled-components\";\nimport Slider from \"react-slick\";\n\nexport const MovieSlider = styled(Slider)`\n  margin-top: 10px;\n`\nexport const MovieListItem = styled.div`\n  padding: 0 3px;\n  box-sizing: border-box;\n  &:hover img{\n    opacity: 0.4;\n  }\n`\nexport const ItemImage = styled.div`\n  height: 0;\n  overflow: hidden;\n  position: relative;\n  padding-bottom: 85%;\n`\n\nexport const ItemIMG = styled.img`\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  transition: .4s;\n`\n\nexport const ItemTitle = styled.h3`\n  margin-top: 5px;\n  font-size: 13px;\n`","import React from \"react\";\nimport {MovieSlider, ItemImage, ItemIMG, ItemTitle, MovieListItem} from \"./MovieItem.Styled\";\nimport {Link} from \"react-router-dom\";\n\nfunction MovieItem(props) {\n    const {item, settings} = props;\n\n    return (\n        <MovieSlider {...settings}>\n            {\n                item.length && item.map((i) => {\n                    return (\n                        <MovieListItem key={i.id}>\n                            <Link to={`/detail/${i.id}`}>\n                                <ItemImage>\n                                    <ItemIMG src={i.large_cover_image} alt={i.title}/>\n                                </ItemImage>\n                                <ItemTitle className=\"e_\">{i.title}</ItemTitle>\n                            </Link>\n                        </MovieListItem>\n                    )\n                })\n            }\n        </MovieSlider>\n    )\n}\n\n\nexport default MovieItem;","import React from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport styled from \"styled-components\";\n\nfunction MovieList(props) {\n    const {itemlistTitle, item, settings} = props;\n\n    return(\n        <List>\n            <h2>{itemlistTitle}</h2>\n            {Boolean(item.length) && <MovieItem item={item} settings={settings} />}\n        </List>\n    )\n}\n\n\nconst List = styled.div`\n  color: #fff;\n  padding: 15px 0;\n  h2 {\n    font-size: 15px;\n  }\n`\n\nexport default MovieList;","import styled from \"styled-components\";\n\nexport const MainArea = styled.div`\n  position: relative;\n  max-width: 93%;\n  margin: 0 auto;\n  padding: 40px 0;\n`","import React from \"react\";\nimport MovieList from \"../../components/MovieList\";\nimport {MainArea} from \"../../components/AppLayout/AppLayout.Styled\";\n\nfunction MainList(props){\n    const {\n        MovieListFilter = {},\n        isLoggedIn,\n        nickname = \"\",\n        myList,\n        settings\n    } = props;\n\n    return(\n        <MainArea>\n            <MovieList\n                settings={settings}\n                itemlistTitle={\"인기 추천 컨텐츠\"}\n                item={MovieListFilter({el:\"recommend\", sorting:false})}/>\n            {\n                isLoggedIn && Boolean(myList.length) && (\n                    <MovieList\n                        settings={settings}\n                        itemlistTitle={`${nickname}님이 좋아하는 컨텐츠`}\n                        item={MovieListFilter({el:\"myList\", sorting:false})}/>\n                )\n            }\n            <MovieList\n                itemlistTitle={\"드라마\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Drama\"})}/>\n            <MovieList\n                itemlistTitle={\"코미디 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Comedy\"})}/>\n        </MainArea>\n    )\n}\n\n\nexport default MainList;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport MovieListController from \"../../components/MovieList/MovieListController\";\nimport MainList from \"./MainList\";\n\nfunction Home() {\n    const {\n        app : {Movies = [], bestMovies = []},\n        user : {isLoggedIn = false, LoginData : {myList = [], nickname = \"\"}}\n    } = useSelector(state => state);\n\n    const [MovieListFilter] = MovieListController({Movies, myList, bestMovies});\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 7,\n        slidesToScroll: 7,\n        touchMove: false,\n    };\n\n\n    return (\n        <MainList\n            MovieListFilter={MovieListFilter}\n            isLoggedIn={isLoggedIn}\n            nickname={nickname}\n            myList={myList}\n            settings={settings}\n        />\n    )\n}\n\nexport default Home;","import styled from \"styled-components\";\nimport {RiHeartAddLine} from \"react-icons/ri\";\n\nexport const MovieInfo = styled.div`\n`\nexport const ItemGroup = styled.div`\n  display: flex;\n\n  @media ${(props) => props.theme.mobile} {\n    flex-wrap: wrap;\n  }\n`\nexport const ColLeft = styled.div`\n`\nexport const PosterImage = styled.div`\n`\nexport const PosterIMG = styled.img`\n  width: 250px;\n\n  @media ${(props) => props.theme.mobile} {\n    width: 180px;\n  }\n`\nexport const ColRight = styled.div`\n  box-sizing: border-box;\n  padding: 0 50px;\n  font-size: 14px;\n  width: calc(100% - 250px);\n\n  @media ${(props) => props.theme.mobile} {\n    width: 100%;\n    padding: 20px 0;\n  }\n`\nexport const Title = styled.h2`\n  font-family: 'Montserrat', sans-serif;\n  font-size: 32px;\n  letter-spacing: -.3px;\n`\nexport const Year = styled.div`\n    margin: 15px 0px 0px;\n`\nexport const Rating = styled.div`\n    margin-bottom: 20px;\n`\nexport const Runtime = styled.div`\n    opacity: 0.5;\n`\nexport const Description = styled.div`\n  font-size: 15px;\n  margin: 20px 0 25px;\n  max-width: 600px;\n  line-height: 1.6;\n  opacity: 0.7;\n`\nexport const Genre = styled.div`\n    opacity: 0.5;\n`\nexport const Genres = styled.span`\n  + span {\n    margin-left: 5px;\n  }\n`\nexport const OtherMovies = styled.div`\n  overflow:hidden;\n  margin-top: 50px;\n  background: rgba(0,0,0,0.5);\n  padding: 35px 25px;\n  box-sizing: border-box;\n  h3 {\n    margin-bottom: 10px;\n  }\n`\nexport const OtherMovieList = styled.div`\n`\nexport const LikeButton = styled.button`\n  font-size: 15px;\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  transition: .4s;\n\n  span {\n    margin-left: 8px;\n  }\n\n  &:not(.active):hover {\n    opacity: 0.5;\n  }\n\n  svg {\n    animation: bounceHeart 1s 2 ease-out;\n  }\n  &.active {\n    color: #34b56b;\n  }\n`\nexport const HeartIcon = styled(RiHeartAddLine)`\n  font-size: 20px;\n  transition: animation .4s;\n  @keyframes bounceHeart {\n    0% {transform: translateY(0px)}\n    50% {transform: translateY(-3px)}\n    100% {transform: translateY(0px)}\n  }\n`","import React from \"react\";\nimport {\n    Description, Genre, Genres, ItemGroup, ColLeft, ColRight, PosterImage,\n    PosterIMG, MovieInfo, OtherMovieList, OtherMovies, Rating, Runtime, Title, Year,\n    LikeButton, HeartIcon\n} from \"./MovieDetail.Styled\";\nimport MovieItem from \"../../components/MovieList/MovieItem\";\nimport {FaCheckCircle} from \"react-icons/fa\";\nimport cn from \"classnames\";\n\nfunction MovieDetail(props){\n    const {\n        post, otherPost, isLiked, isLoggedIn, toggleLikeButton, settings\n    } = props;\n\n\n    return(\n        <MovieInfo>\n            <ItemGroup>\n                <ColLeft>\n                    <PosterImage><PosterIMG src={post.medium_cover_image} alt=\"\"/></PosterImage>\n                    {\n                        isLoggedIn &&\n                        <LikeButton\n                            type=\"button\"\n                            onClick={() => toggleLikeButton(isLiked)}\n                            className={cn({active: isLiked})}>\n                            {isLiked ? <AddedLikeList /> : <AddLikeList />}\n                        </LikeButton>\n                    }\n                </ColLeft>\n                <ColRight>\n                    <Title>{post.title_long}</Title>\n                    <Year>{post.year}</Year>\n                    <Rating>\n                        별점 : ⭐{post.rating}\n                    </Rating>\n                    <Description>{post.description_full}</Description>\n                    <Runtime>전체 : {post.runtime}분</Runtime>\n                    <Genre>\n                        장르 :\n                        {\n                            post.genres && post.genres.map((i,idx) => {\n                                return <Genres key={idx}>{i}</Genres>\n                            })\n                        }\n                    </Genre>\n                    <OtherMovies>\n                        <h3>{post.title} 와 비슷한 작품</h3>\n                        {\n                            otherPost &&\n                            typeof(otherPost) !== undefined && otherPost.length &&\n                            <MovieItem item={otherPost} settings={settings} />\n                        }\n                        <OtherMovieList>\n                        </OtherMovieList>\n                    </OtherMovies>\n                </ColRight>\n            </ItemGroup>\n        </MovieInfo>\n    )\n}\n\n\nfunction AddedLikeList() {\n    return (\n        <><FaCheckCircle /> <span>보관함에 추가됨</span></>\n    )\n}\n\nfunction AddLikeList() {\n    return (\n        <><HeartIcon /> <span>보관함에 추가</span></>\n    )\n}\n\n\n\nexport default MovieDetail;","import styled from \"styled-components\";\nimport {MainArea} from \"../../components/AppLayout/AppLayout.Styled\";\n\nexport const DetailGroup = styled.div`\n  position: relative;\n  min-height: 100vh;\n  background: #202020 ${(props) => props.background && `url(${props.background})`} no-repeat center top /cover fixed;\n  transition: background-image 0.5s .1s;\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n  }\n`\nexport const MainAreaStyled = styled(MainArea)`\n    z-index: 2;\n`","//initialState\nconst initialState = {\n    openSidebar : false,\n    bestMovies: [26185, 26232, 26213, 26229, 26231, 26229, 26216, 26182, 26206, 26199],\n}\n\n//action\nconst Action = {\n    Types: {\n        UPDATE_STATE: \"@@APP/UPDATE_STATE\",\n        GET_MOVIES: \"@@APP/GET_MOVIES\",\n    },\n    Creators: {\n        updateState: (props) => ({\n            type: Action.Types.UPDATE_STATE,\n            payload: props\n        }),\n        getMovies: () => ({\n            type:Action.Types.GET_MOVIES,\n        })\n    }\n}\n\n//reducer\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        default: return state;\n        case Action.Types.UPDATE_STATE: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n    }\n}\n    \n\nexport {reducer, Action}","import produce from \"immer\";\n\n//initialState\nconst initialState = {\n    //더미데이터, 데이터 양식\n    Users : [\n        {\n            id:\"7c1a38ba-2ebe-4600-a546-9f7482766aee\",\n            userId:\"admin\",\n            userPassword:\"1234\",\n            nickname:\"ye-r1\",\n            myList: [26231, 26229, 26199, 26216, 26182, 26206],\n            SearchList: [],\n        },\n    ],\n    LoginData: {},\n    isLoggedIn: false,\n}\n\n//action\nconst Action = {\n    Types: {\n        UPDATE_STATE: \"@@USER/UPDATE_STATE\",\n        ADDED_USER: \"@@USER/ADDED_USER\",\n        ADD_MYLIST: \"@@USER/ADD_MYLIST\",\n        REMOVE_MYLIST: \"@@USER/REMOVE_MYLIST\",\n    },\n    Creators: {\n        updateState: (props) => ({\n            type: Action.Types.UPDATE_STATE,\n            payload: props\n        }),\n        addedUser: (props) => ({\n            type: Action.Types.ADDED_USER,\n            payload:props\n        }),\n        addMyList: (props) => ({\n            type: Action.Types.ADD_MYLIST,\n            payload:props\n        }),\n        removeMyList: (props) => ({\n            type: Action.Types.REMOVE_MYLIST,\n            payload:props\n        }),\n    }\n\n}\n\n//reducer\nconst reducer = (state = initialState, action) => {\n    return produce(state, draft => {\n        switch(action.type){\n            default: return draft;\n            case Action.Types.UPDATE_STATE: {\n                return {\n                    ...state,\n                    ...action.payload\n                }\n            }\n            case Action.Types.ADDED_USER: {\n                draft.Users.push(action.payload);\n                break;\n            }\n            case Action.Types.ADD_MYLIST: {\n                draft.LoginData.myList.unshift(action.payload);\n                break;\n            }\n            case Action.Types.REMOVE_MYLIST: {\n                draft.LoginData.myList.splice(draft.LoginData.myList.indexOf(action.payload),1);\n                break;\n            }\n        }\n    });\n}\n    \n\nexport {reducer, Action}","import {combineReducers} from \"redux\";\nimport {reducer as appReducer} from \"./app/redux\";\nimport {reducer as userReducer} from \"./user/redux\";\n\nconst reducers = combineReducers({\n    app: appReducer,\n    user: userReducer\n})\n\nexport default reducers;","import axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\naxios.defaults.baseURL = process.env.REACT_APP_SITE_URL;\n\nconsole.log('@@ ',process.env.SITE_URL);\n\nconst API = {\n    getMovies: async () => await axios.get(\"/list_movies.json\"),\n}\n\nexport default API;","import {all, call, put, takeLatest} from \"redux-saga/effects\";\nimport {Action} from \"./redux\";\nimport API from \"../../api\";\n\nfunction* saga(){\n    yield all([\n        takeLatest(Action.Types.GET_MOVIES, function* (){\n            const result = yield call(API.getMovies);\n            if(result?.data) {\n                yield put(Action.Creators.updateState({\n                    Movies: result.data.data.movies\n                }))\n            }\n        }),\n\n    ])\n}\n\nexport default saga;","function* saga(){\n\n}\n\nexport default saga;","import {all} from \"redux-saga/effects\";\nimport appSaga from \"./app/saga\";\nimport userSaga from \"./user/saga\";\n\nfunction* sagas (){\n    yield all([\n        appSaga(),\n        userSaga(),\n    ])\n}\n\nexport default sagas;","import {createStore, applyMiddleware} from \"redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from \"./sagas\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(sagas);\n\nexport default store;","import {bindActionCreators} from \"redux\";\nimport store from \"./store\";\nimport {Action as AppAction} from \"./app/redux\";\nimport {Action as UserAction} from \"./user/redux\";\n\nconst {\n    dispatch\n} = store;\n\nexport const appActions = bindActionCreators(AppAction.Creators, dispatch);\nexport const userActions = bindActionCreators(UserAction.Creators, dispatch);","import React, {useState, useEffect} from \"react\";\nimport {userActions} from \"../../../redux/actionCreators\";\nimport utils from \"../../../utils\";\n\nfunction DetailController(id, Movies, myList){\n    const [isLiked, setIsLiked] = useState(false);\n    const [post, setPost] = useState({});\n    const [otherPost, setOtherPost] = useState({});\n\n    useEffect(() => {\n        //post 정의\n        const postResult = Movies.length && Movies.find((i) => id === i.id);\n        setPost(postResult);\n    }, [Movies, id]);\n\n\n    useEffect(() => {\n        //<myList>에 있는 게시글인지 체크, otherPost 생성 및 sorting\n        const likedListResult = post && Boolean(myList.find((item) => item === post.id));\n\n        const genreArr = post.genres;\n        const otherPostResult = genreArr && Movies.filter((item) => {\n            for(let i=0; i<genreArr.length; i++){\n                if(item.genres.indexOf(genreArr[i]) !== -1 && post.id !== item.id) return true;\n            }\n        });\n        const result = utils({name:\"descending\", item: otherPostResult, target:\"rating\"});\n\n        setIsLiked(likedListResult);\n        setOtherPost(result);\n    }, [post]);\n\n\n    const toggleLikeButton = (state) => {\n        //보관함 토글 버튼\n        setIsLiked(!state);\n        if(myList.includes(post.id)){\n            userActions.removeMyList(post.id);\n        } else {\n            userActions.addMyList(post.id);\n        }\n    };\n\n    return [post, otherPost, isLiked, toggleLikeButton];\n}\n\nexport default DetailController;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport MovieDetail from \"./MovieDetail\";\nimport {DetailGroup, MainAreaStyled} from \"./index.Styled\";\nimport DetailController from \"./DetailController\";\n\nfunction Detail(props){\n    const {match} = props;\n    const id = Number(match.params.id);\n    const {\n        app : {Movies = []},\n        user : {\n            LoginData: {myList = []},\n            isLoggedIn\n        }\n    } = useSelector(state => state);\n\n    const [post, otherPost, isLiked, toggleLikeButton] = DetailController(id, Movies, myList);\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 6,\n        slidesToScroll: 6,\n        touchMove: false,\n    };\n\n\n    return(\n        <DetailGroup background={post.background_image_original}>\n            <MainAreaStyled>\n                <MovieDetail\n                    post={post}\n                    otherPost={otherPost}\n                    isLiked={isLiked}\n                    isLoggedIn={isLoggedIn}\n                    toggleLikeButton={toggleLikeButton}\n                    settings={settings}\n                />\n            </MainAreaStyled>\n        </DetailGroup>\n    )\n}\n\nexport default Detail;","import React from \"react\";\nimport MovieList from \"../../components/MovieList\";\nimport {MainArea} from \"../../components/AppLayout/AppLayout.Styled\";\n\nfunction GenreList(props){\n    const {\n        MovieListFilter = {},\n        settings\n    } = props;\n\n    return(\n        <MainArea>\n            <MovieList\n                itemlistTitle={\"드라마\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Drama\"})}/>\n            <MovieList\n                itemlistTitle={\"코미디 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Comedy\"})}/>\n            <MovieList\n                itemlistTitle={\"다큐멘터리 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Documentary\"})}/>\n            <MovieList\n                itemlistTitle={\"판타지 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Fantasy\"})}/>\n            <MovieList\n                itemlistTitle={\"음악 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Music\"})}/>\n            <MovieList\n                itemlistTitle={\"로맨스 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Romance\"})}/>\n            <MovieList\n                itemlistTitle={\"액션 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Action\"})}/>\n        </MainArea>\n    )\n}\n\n\nexport default GenreList;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport MovieListController from \"../../components/MovieList/MovieListController\";\nimport GenreList from \"./GenreList\";\n\nfunction Genre() {\n    const {\n        app : {Movies = []},\n    } = useSelector(state => state);\n\n    const [MovieListFilter] = MovieListController({Movies});\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 7,\n        slidesToScroll: 7,\n        touchMove: false,\n    };\n\n\n    return (\n        <GenreList\n            MovieListFilter={MovieListFilter}\n            settings={settings}\n        />\n    )\n}\n\nexport default Genre;","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Search(){\n    \n    return(\n        <Container>\n            Search\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n\n`\n\nexport default Search;","import styled from \"styled-components\";\nimport {Form} from \"antd\";\n\nexport const Container = styled.div`\n  background: #202020 ${(props) => props.background && `url(${props.background})`} no-repeat center top /cover fixed;\n  transition: background-image 0.5s .1s;\n  height: 100vh;\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  position: relative;\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n  }\n`\nexport const LoginGroup = styled.div`\n  position: relative;\n  z-index: 2;\n  h2 {\n    font-family: 'Montserrat', sans-serif;\n    font-size: 15px;\n    margin-bottom: 10px;\n    font-weight: 500;\n    letter-spacing: -.2px;\n  }\n`\nexport const FormStyled = styled(Form)`\n  width: 300px;\n\n  .ant-form-item {\n    color: #fff;\n  }\n\n  .ant-btn {\n    width: 100%;\n  }\n\n  .user-name {\n    margin-bottom: 12px;\n  }\n\n  .login-form-link {\n    color: #fff;\n    text-decoration: underline;\n    font-family: 'Montserrat', sans-serif;\n  }\n  \n`","import React from \"react\";\nimport {Form, Input, Button} from \"antd\";\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {Container, FormStyled, LoginGroup} from \"./index.Styled\";\nimport {Link} from \"react-router-dom\";\n\nfunction LoginForm(props) {\n    const {\n        form, background, handleSubmit\n    } = props;\n\n    return (\n        <Container background={background}>\n            <LoginGroup>\n                <h2>Member Login</h2>\n                <FormStyled\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    form={form}\n                    onFinish={handleSubmit}\n                >\n                    <Form.Item\n                        name=\"userId\"\n                        className=\"user-name\"\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\n                    </Form.Item>\n                    <Form.Item name=\"userPassword\">\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-btn\">\n                            Log in\n                        </Button>\n                        or <Link to={\"/member/join\"} className=\"login-form-link\">register now!</Link>\n                    </Form.Item>\n                </FormStyled>\n            </LoginGroup>\n        </Container>\n    )\n}\n\n\nexport default LoginForm;","import {useEffect, useCallback, useState} from \"react\";\nimport {userActions} from \"../../../../redux/actionCreators\";\n\nfunction SubmitController(Users, form, history, isLoggedIn) {\n    const [isSuccessIn, setIsSuccessIn] = useState(false);\n\n    useCallback(() => {\n        if (isLoggedIn) {\n            alert('이미 로그인된 회원입니다.');\n            history.push(\"/\");\n            return false;\n        }\n    }, [isLoggedIn]);\n\n    useEffect(() => {\n        if (isSuccessIn) {\n            //<submit> 성공 후 실행할 목록\n            history.push(\"/\");\n            form.resetFields();\n            return false;\n        }\n    }, [isSuccessIn]);\n\n\n    const handleSubmit = (values) => {\n        setIsSuccessIn(false);\n\n        const result = Users.length && Users.find((item) => item.userId === values.userId);\n\n        if (result) {\n            if (result.userPassword === values.userPassword) {\n                alert('로그인 되었습니다.');\n                setIsSuccessIn(true);\n                userActions.updateState({\n                    isLoggedIn: true,\n                    LoginData: {\n                        id: result.id,\n                        userId: result.userId,\n                        nickname: result.nickname,\n                        myList: result.myList,\n                    }\n                })\n            } else {\n                if (values.userPassword) {\n                    alert('비밀번호가 일치하지 않습니다.');\n                    return false;\n                } else {\n                    alert('비밀번호 입력해주세요.');\n                    return false;\n                }\n            }\n        } else {\n            if (values.userId) {\n                alert('일치하는 아이디가 없습니다.');\n                return false;\n            } else {\n                alert('아이디를 입력해주세요.');\n                return false;\n            }\n        }\n    }\n\n    return [handleSubmit];\n}\n\nexport default SubmitController;\n","import React, {useEffect, useState} from \"react\";\nimport {Form} from \"antd\";\nimport {useSelector} from \"react-redux\";\nimport LoginForm from \"./LoginForm\";\nimport SubmitController from \"./SubmitController\";\n\n\nfunction Login({history}) {\n    const [form] = Form.useForm();\n    const [background, setBackground] = useState('');\n    const {\n        app: {Movies = []},\n        user: {Users = [], isLoggedIn = false}\n    } = useSelector(state => state);\n\n    useEffect(() => {\n        const result = Movies.length && Movies[Math.floor(Math.random() * Movies.length)].background_image_original;\n        result && setBackground(result);\n    }, [Movies]);\n\n    const [handleSubmit] = SubmitController(Users, form, history, isLoggedIn);\n\n\n    return (\n        <LoginForm\n            form={form}\n            background={background}\n            handleSubmit={handleSubmit}\n        />\n    )\n}\n\n\nexport default Login;","import React from \"react\";\nimport {MainArea} from \"../../../components/AppLayout/AppLayout.Styled\";\nimport MovieList from \"../../../components/MovieList\";\nimport styled from \"styled-components\";\n\nfunction MyMovieList(props){\n    const {\n        isLoggedIn, MovieListFilter, nickname, myList, settings\n    } = props;\n\n    return(\n        <MainArea>\n            {\n                isLoggedIn &&\n                <MovieList\n                    itemlistTitle={`${nickname}님이 좋아하는 컨텐츠`}\n                    settings={settings}\n                    item={MovieListFilter({el:\"myList\", sorting:false})}\n                    sorting={false}/>\n            }\n            {!myList.length && <ErrorMessage />}\n        </MainArea>\n    )\n}\n\nfunction ErrorMessage() {\n    return (\n        <Message>보관하신 컨텐츠가 없습니다.</Message>\n    )\n}\n\nconst Message = styled.div`\n  opacity: 0.2;\n  font-size: 14px;\n`\n\nexport default MyMovieList;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport MovieListController from \"../../../components/MovieList/MovieListController\";\nimport MyMovieList from \"./MyMovieList\";\n\nfunction MyList(){\n    const {\n        app : {Movies = []},\n        user : {isLoggedIn = false, LoginData : {myList = [], nickname = \"\"}}\n    } = useSelector(state => state);\n\n    const [MovieListFilter] = MovieListController({Movies, myList});\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 7,\n        slidesToScroll: 7,\n        touchMove: false,\n    };\n\n    return(\n        <MyMovieList\n            isLoggedIn={isLoggedIn}\n            MovieListFilter={MovieListFilter}\n            nickname={nickname}\n            myList={myList}\n            settings={settings}\n        />\n    )\n}\n\n\nexport default MyList;","import styled from \"styled-components\";\nimport {Form} from \"antd\";\n\nexport const JoinGroup = styled.div`\n  max-width: 600px;\n  margin: 60px auto;\n  h2{\n    font-family: 'Montserrat', sans-serif;\n    font-size: 15px;\n    margin-bottom: 10px;\n    font-weight: 500;\n    letter-spacing: -.2px;\n  }\n`\nexport const FormStyled = styled(Form)`\n  .ant-form-item-label > label {\n    color: #fff;\n  }\n  .ant-form-item {\n    margin: 12px 0 0px;\n  }\n`\nexport const FormErrorMessage = styled.div`\n  color: ${(props) => props.theme.mainColor};\n  margin-top: 2px;\n`","import React from \"react\";\nimport {Form, Button, Input} from 'antd';\nimport {FormErrorMessage, FormStyled, JoinGroup} from \"./index.Styled\";\n\nfunction JoinForm(props) {\n    const {\n        form, handleSubmit,\n        handleOnChange, user, error,\n    } = props;\n\n    return (\n        <JoinGroup>\n            <h2>Member Join</h2>\n            <FormStyled form={form} onFinish={handleSubmit}>\n                <Form.Item name=\"username\">\n                    <Input\n                        placeholder=\"Username\"\n                        value={user.id}\n                        name=\"id\"\n                        onChange={(e) => handleOnChange(e)}\n                    />\n                </Form.Item>\n                {error.id && <FormErrorMessage>{error.id}</FormErrorMessage>}\n\n                <Form.Item name=\"password\">\n                    <Input.Password\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        value={user.password}\n                        name=\"password\"\n                        onChange={(e) => handleOnChange(e)}\n                    />\n                </Form.Item>\n\n                {error.password && <FormErrorMessage>{error.password}</FormErrorMessage>}\n\n                <Form.Item name=\"verifyPassword\">\n                    <Input.Password\n                        placeholder=\"Verify Password\"\n                        type=\"password\"\n                        value={user.verifyPassword}\n                        name=\"verifyPassword\"\n                        onChange={(e) => handleOnChange(e)}\n                    />\n                </Form.Item>\n                {error.verifyPassword && <FormErrorMessage>{error.verifyPassword}</FormErrorMessage>}\n\n                <Form.Item name=\"nickname\">\n                    <Input\n                        placeholder=\"User Nickname\"\n                        value={user.nickname}\n                        name=\"nickname\"\n                        onChange={(e) => handleOnChange(e)}\n                    />\n                </Form.Item>\n                {error.nickname && <FormErrorMessage>{error.nickname}</FormErrorMessage>}\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Join\n                    </Button>\n                </Form.Item>\n            </FormStyled>\n        </JoinGroup>\n    )\n}\n\n\nexport default JoinForm;","const validId = (current, required) => {\n    if(!current && required) {\n        return \"필수 입력값 입니다.\"\n    }\n    if (current.length < 2) {\n        return \"최소 2자 이상 입력해주세요.\";\n    }\n    if (current.length > 20) {\n        return \"최대 20자까지 입력 가능합니다.\";\n    }\n    return null;\n};\n\nconst validPassword = (current, required) => {\n    if(!current && required) {\n        return \"필수 입력값 입니다.\";\n    }\n    if (current.length < 2) {\n        return \"최소 2자 이상 입력해주세요.\";\n    }\n    if (current.length > 20) {\n        return \"최대 20자까지 입력 가능합니다.\";\n    }\n    return null;\n};\n\nconst validVerifyPassword = (password, current) => {\n    if (password && password !== current){\n        return \"입력하신 비밀번호가 일치하지 않습니다.\";\n    }\n    if (password && current?.length < 2) {\n        return \"최소 2자 이상 입력해주세요.\";\n    }\n    if (password && current?.length > 20) {\n        return \"최대 20자까지 입력 가능합니다.\";\n    }\n    return null;\n};\n\nconst validNickname = (current, required) => {\n    if(!current && required) {\n        return \"필수 입력값 입니다.\";\n    }\n    if (current.length < 2) {\n        return \"최소 2자 이상 입력해주세요.\";\n    }\n    if (current.length > 20) {\n        return \"최대 20자까지 입력 가능합니다.\";\n    }\n    return null;\n};\n\nfunction validate({current, value, user, error, required}){\n    let newError = {};\n\n    if(current === \"id\" || !current & !value & required.id === true) {\n        newError.id = validId(current ? value : user.id, required.id);\n    }\n    if(current === \"password\" || !current & !value & required.password === true) {\n        newError.password = validPassword(current ? value : user.password, required.password);\n        newError.verifyPassword = validVerifyPassword(current ? value : user.password, user?.verifyPassword);\n    }\n    if(current === \"verifyPassword\" || !current & !value & required.verifyPassword === true) {\n        newError.verifyPassword = validVerifyPassword(user?.password, current ? value : user?.verifyPassword);\n    }\n    if(current === \"nickname\" || !current & !value & required.nickname === true) {\n        newError.nickname = validNickname(current ? value : user.nickname, required.nickname);\n    }\n\n    return {...error, ...newError};\n}\n\n\nexport default validate;","import {useCallback, useState} from \"react\";\nimport validate from \"../utils/validation\";\n\nfunction useForm(storeDispatch, buildDispatch, required) {\n    const [user, setUser] = useState({});\n    const [error, setError] = useState({});\n    const [isSuccessIn, setIsSuccessIn] = useState(false);\n\n\n    const handleOnChange = useCallback((e) => {\n        setIsSuccessIn(false);\n        let {name : current, value} = e.target;\n        const updateInfo = {...user, [current] : value};\n        setUser(updateInfo);\n\n        //현재 입력하는 값이 있기에 <current>로 검사\n        const result = validate({current, value, user, error, required});\n        setError(result);\n\n    }, [user, error]);\n\n\n    const handleSubmit = () => {\n\n        setIsSuccessIn(false);\n\n        //현재 입력하는 값이 없기에 기존 데이터 <user>로 검사\n        const result = validate({user, error, required});\n        setError(result);\n\n\n        const resultValue = Object.values(result);\n        const checkSubmit = Boolean(resultValue.length) && resultValue.every((i) => i === null);\n\n        if (checkSubmit) {\n            storeDispatch(buildDispatch(user));\n            setIsSuccessIn(true);\n        } else {\n            alert('오류가 발생하였습니다.');\n        }\n    };\n\n\n    return [user, setUser, error, setError, handleOnChange, handleSubmit, isSuccessIn];\n}\n\n\nexport default useForm;","import {useEffect} from \"react\";\nimport useForm from \"../../../../hooks/useForm\";\n\nfunction SubmitController(props) {\n    const {\n        form, required, isLoggedIn,\n        history, storeDispatch, buildDispatch\n    } = props;\n\n    const [\n        user, setUser, error, setError,\n        handleOnChange, handleSubmit,\n        isSuccessIn = false\n    ] = useForm(storeDispatch, buildDispatch, required);\n\n    useEffect(() => {\n        if(isLoggedIn) {\n            alert('이미 가입된 회원입니다.');\n            history.push(\"/\");\n            return false;\n        }\n    }, [isLoggedIn]);\n\n    useEffect(() => {\n        if(isSuccessIn) {\n            //<submit> 성공 후 실행할 목록\n            alert('회원가입이 완료되었습니다.');\n            setUser({});\n            setError({});\n            form.resetFields();\n            history.push(\"/member/login\");\n        }\n    }, [isSuccessIn]);\n\n\n    return [user, error, handleSubmit, handleOnChange];\n}\n\nexport default SubmitController;\n","import React from \"react\";\nimport {Form} from 'antd';\nimport {userActions} from \"../../../../redux/actionCreators\";\nimport utils from \"../../../../utils\";\nimport JoinForm from \"./JoinForm\";\nimport {useSelector} from \"react-redux\";\nimport SubmitController from \"./SubmitController\";\n\n\nfunction Join({history}) {\n    const {\n        isLoggedIn = false\n    } = useSelector(state => state.user);\n\n    const [form] = Form.useForm();\n    const required = {id : true, password : true, verifyPassword : true, nickname : true};\n\n    const storeDispatch = (obj) => userActions.addedUser(obj);\n    const buildDispatch = (arg) => ({\n        id : utils({name:\"guid\"}),\n        userId : arg.id,\n        userPassword : arg.password,\n        nickname : arg.nickname,\n        myList: [],\n        SearchList: [],\n    });\n\n    const [user, error, handleSubmit, handleOnChange] = SubmitController({\n        form, required, isLoggedIn, history,\n        storeDispatch, buildDispatch\n    });\n\n\n    return (\n        <JoinForm\n            form={form}\n            handleSubmit={handleSubmit}\n            handleOnChange={handleOnChange}\n            user={user}\n            error={error}\n        />\n    )\n}\n\n\nexport default Join;","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Profile(){\n    \n    return(\n        <Container>\n            Profile\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n\n`\n\nexport default Profile;","import {useEffect} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {userActions} from \"../../../../redux/actionCreators\";\n\nfunction Logout({history}){\n    const {\n        isLoggedIn = false\n    } = useSelector(state => state.user);\n\n    useEffect(() => {\n        if(isLoggedIn) {\n            userActions.updateState({\n                LoginData: {},\n                isLoggedIn: false,\n            });\n            alert('로그아웃 되었습니다.');\n            history.push(\"/\");\n            return false;\n        } else {\n            alert('정상적인 경로가 아닙니다.');\n            history.push(\"/\");\n            return false;\n        }\n    }, []);\n\n    return null;\n}\n\nexport default Logout;","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport MyList from \"./MyList\";\nimport Join from \"./Join\";\nimport Profile from \"./Profile\";\nimport Logout from \"./Logout\";\n\nfunction Member({history}) {\n\n    return (\n        <Switch>\n            <Route path={\"/member/login\"} component={Login}/>\n            <Route path={\"/member/join\"} component={Join} history={history}/>\n            <Route path={\"/member/logout\"} component={Logout} history={history}/>\n            <Route path={\"/member/my-list\"} component={MyList}/>\n            <Route path={\"/member/profile\"} component={Profile}/>\n        </Switch>\n    )\n}\n\n\nexport default Member;","const size = {\n    mobile : \"767px\",\n    tabletStart : \"768px\",\n    tabletEnd : \"1279px\",\n    laptopStart : \"1280px\",\n    laptopEnd : \"1679px\",\n    desktop: \"1680px\"\n}\n\nconst theme = {\n    mainColor : '#c30000',\n    mobile : `screen and (max-width:${size.mobile})`,\n    tablet : `screen and (min-width:${size.tabletStart}) and (max-width:${size.tabletEnd})`,\n    laptop : `screen and (min-width:${size.laptopStart}) and (max-width:${size.laptopEnd})`,\n    desktop: `screen and (min-width:${size.desktop})`\n}\n\nexport default theme;","import {useEffect} from \"react\";\nimport {useLocation} from \"react-router-dom\";\n\nconst ScrollToTop = () => {\n    \n    const {pathname} = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}\n\nexport default ScrollToTop;","import React, {useEffect} from \"react\";\nimport AppLayout from \"./views/components/AppLayout\";\nimport {Switch, Route} from \"react-router-dom\";\nimport Home from \"./views/pages/Home\";\nimport Detail from \"./views/pages/Detail\";\nimport Genre from \"./views/pages/Genre\";\nimport Search from \"./views/pages/Search\";\nimport {useSelector} from \"react-redux\";\nimport {appActions} from \"./redux/actionCreators\";\nimport Member from \"./views/pages/Member\";\nimport {ThemeProvider} from \"styled-components\";\nimport theme from \"./style/theme\";\nimport ScrollToTop from \"./utils/scrollToTop\";\nimport {AnimatedSwitch} from \"react-router-transition\";\n\n\nfunction App(){\n    const {\n        Movies = []\n    } = useSelector(state => state?.app);\n\n    useEffect(() => {\n        if(!Movies.length) {\n            console.log('@@APP/GET_MOVIES');\n            appActions.getMovies();\n        }\n    }, []);\n\n    return(\n        <ThemeProvider theme={theme}>\n            <ScrollToTop />\n            <AppLayout>\n                <Switch>\n                    <AnimatedSwitch\n                        atEnter={{ opacity: 0 }}\n                        atLeave={{ opacity: 0 }}\n                        atActive={{ opacity: 1 }}\n                        className=\"switch-wrapper\"\n                    >\n                        <Route exact path={\"/\"} component={Home}/>\n                        <Route path={\"/detail/:id\"} component={Detail}/>\n                        <Route path={\"/genre\"} component={Genre}/>\n                        <Route path={\"/search\"} component={Search}/>\n                        <Route path={\"/member\"} component={Member}/>\n                    </AnimatedSwitch>\n                </Switch>\n            </AppLayout>\n        </ThemeProvider>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./style/app.scss\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router basename={process.env.REACT_APP_SITE_URL}>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}