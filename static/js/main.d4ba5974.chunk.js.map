{"version":3,"sources":["views/components/AppBar/AppBar.Styled.js","redux/app/redux.js","redux/user/redux.js","redux/reducers.js","api/index.js","redux/app/saga.js","redux/user/saga.js","redux/sagas.js","redux/store.js","redux/actionCreators.js","utils/common.js","hooks/useAuth.js","views/components/AppBar/index.js","views/components/AppLayout/index.js","views/components/MovieList/MovieListController.js","views/components/MovieList/MovieItem.Styled.js","views/components/MovieList/MovieItem.js","views/components/MovieList/index.js","views/components/AppLayout/AppLayout.Styled.js","views/pages/Home/MainList.js","views/pages/Home/index.js","views/pages/Detail/MovieDetail.Styled.js","views/pages/Detail/MovieDetail.js","views/pages/Detail/index.Styled.js","views/pages/Detail/DetailController.js","views/pages/Detail/index.js","views/pages/Genre/GenreList.js","views/pages/Genre/index.js","views/pages/Search/index.js","views/pages/Member/Login/index.Styled.js","views/pages/Member/Login/LoginForm.js","views/pages/Member/Login/SubmitController.js","views/pages/Member/Login/index.js","views/pages/Member/MyList/MyMovieList.js","views/pages/Member/MyList/index.js","views/pages/Member/Join/index.Styled.js","views/pages/Member/Join/JoinForm.js","utils/validation.js","hooks/useForm.js","views/pages/Member/Join/SubmitController.js","views/pages/Member/Join/index.js","views/pages/Member/Profile/index.js","views/pages/Member/Logout/index.js","views/pages/Member/index.js","style/theme.js","utils/scrollToTop.js","App.js","index.js"],"names":["Header","styled","header","HeaderWrap","div","props","theme","mainColor","HeaderLeft","HeaderRight","initialState","openSidebar","bestMovies","Action","Types","UPDATE_STATE","GET_MOVIES","Creators","updateState","type","payload","getMovies","Users","id","userId","userPassword","nickname","myList","SearchList","LoginData","isLoggedIn","ADDED_USER","ADD_MYLIST","REMOVE_MYLIST","addedUser","addMyList","removeMyList","reducers","combineReducers","app","state","action","user","produce","draft","push","unshift","splice","indexOf","dotenv","config","axios","defaults","baseURL","process","API","a","get","saga","all","takeLatest","call","result","data","put","Movies","movies","sagas","appSaga","userSaga","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","dispatch","appActions","bindActionCreators","AppAction","userActions","UserAction","descendingSort","item","target","sort","b","useAuth","onFailure","err","console","log","useGoogleLogin","onSuccess","res","token","profileObj","googleId","name","accessToken","window","localStorage","setItem","clientId","cookiePolicy","isSignedIn","signIn","loaded","signOut","useGoogleLogout","onLogoutSuccess","removeItem","useEffect","ButtonLogin","button","AppBar","useSelector","to","onClick","Container","MainContainer","main","AppLayout","children","MovieListController","el","val","sorting","length","filter","i","genres","map","find","m","MovieSlider","Slider","MovieListItem","ItemImage","ItemIMG","img","ItemTitle","h3","MovieItem","settings","src","large_cover_image","alt","title","className","List","MovieList","itemlistTitle","Boolean","MainArea","MainList","MovieListFilter","Home","dots","infinite","speed","slidesToShow","slidesToScroll","touchMove","MovieInfo","ItemGroup","mobile","ColLeft","PosterImage","PosterIMG","ColRight","Title","h2","Year","Rating","Runtime","Description","Genre","Genres","span","OtherMovies","OtherMovieList","LikeButton","HeartIcon","RiHeartAddLine","AddedLikeList","AddLikeList","MovieDetail","post","otherPost","isLiked","toggleLikeButton","medium_cover_image","cn","active","title_long","year","rating","description_full","runtime","idx","undefined","DetailGroup","background","MainAreaStyled","DetailController","useState","setIsLiked","setPost","setOtherPost","postResult","likedListResult","genreArr","otherPostResult","includes","Detail","match","Number","params","background_image_original","GenreList","Search","LoginGroup","FormStyled","Form","LoginForm","form","handleSubmit","onFinish","Item","prefix","UserOutlined","placeholder","LockOutlined","htmlType","SubmitController","history","isSuccessIn","setIsSuccessIn","useCallback","alert","resetFields","values","Login","useForm","setBackground","Math","floor","random","ErrorMessage","Message","MyMovieList","MyList","JoinGroup","FormErrorMessage","JoinForm","handleOnChange","error","value","onChange","e","Password","password","verifyPassword","validVerifyPassword","current","validate","required","newError","validId","validPassword","validNickname","storeDispatch","buildDispatch","setUser","setError","updateInfo","resultValue","Object","every","Join","obj","arg","toString","substring","Profile","Logout","Member","path","component","size","tablet","laptop","desktop","ScrollToTop","pathname","useLocation","scrollTo","App","atEnter","opacity","atLeave","atActive","exact","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"miCAEO,IAAMA,EAASC,IAAOC,OAAV,KAKNC,EAAaF,IAAOG,IAAV,KAWV,SAACC,GAAD,OAAWA,EAAMC,MAAMC,aAiBvBC,EAAaP,IAAOG,IAAV,KAIVK,EAAcR,IAAOG,IAAV,K,wBCtClBM,EAAe,CACjBC,aAAc,EACdC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAI1EC,EAAS,CACXC,MAAO,CACHC,aAAc,qBACdC,WAAY,oBAEhBC,SAAU,CACNC,YAAa,SAACb,GAAD,MAAY,CACrBc,KAAMN,EAAOC,MAAMC,aACnBK,QAASf,IAEbgB,UAAW,iBAAO,CACdF,KAAKN,EAAOC,MAAME,e,SCfxBN,EAAe,CAEjBY,MAAQ,CACJ,CACIC,GAAG,uCACHC,OAAO,QACPC,aAAa,OACbC,SAAS,QACTC,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5CC,WAAY,KAGpBC,UAAW,GACXC,YAAY,GAIVjB,EAAS,CACXC,MAAO,CACHC,aAAc,sBACdgB,WAAY,oBACZC,WAAY,oBACZC,cAAe,wBAEnBhB,SAAU,CACNC,YAAa,SAACb,GAAD,MAAY,CACrBc,KAAMN,EAAOC,MAAMC,aACnBK,QAASf,IAEb6B,UAAW,SAAC7B,GAAD,MAAY,CACnBc,KAAMN,EAAOC,MAAMiB,WACnBX,QAAQf,IAEZ8B,UAAW,SAAC9B,GAAD,MAAY,CACnBc,KAAMN,EAAOC,MAAMkB,WACnBZ,QAAQf,IAEZ+B,aAAc,SAAC/B,GAAD,MAAY,CACtBc,KAAMN,EAAOC,MAAMmB,cACnBb,QAAQf,MCjCLgC,EALEC,0BAAgB,CAC7BC,IFmBY,WAAmC,IAAlCC,EAAiC,uDAAzB9B,EAAc+B,EAAW,uCAC9C,OAAOA,EAAOtB,MACV,QAAS,OAAOqB,EAChB,KAAK3B,EAAOC,MAAMC,aACd,OAAO,2BACAyB,GACAC,EAAOrB,WExBtBsB,KD2CY,WAAmC,IAAlCF,EAAiC,uDAAzB9B,EAAc+B,EAAW,uCAC9C,OAAOE,YAAQH,GAAO,SAAAI,GAClB,OAAOH,EAAOtB,MACV,QAAS,OAAOyB,EAChB,KAAK/B,EAAOC,MAAMC,aACd,OAAO,2BACAyB,GACAC,EAAOrB,SAGlB,KAAKP,EAAOC,MAAMiB,WACda,EAAMtB,MAAMuB,KAAKJ,EAAOrB,SACxB,MAEJ,KAAKP,EAAOC,MAAMkB,WACdY,EAAMf,UAAUF,OAAOmB,QAAQL,EAAOrB,SACtC,MAEJ,KAAKP,EAAOC,MAAMmB,cACdW,EAAMf,UAAUF,OAAOoB,OAAOH,EAAMf,UAAUF,OAAOqB,QAAQP,EAAOrB,SAAS,U,6EElE7F6B,IAAOC,SAEPC,IAAMC,SAASC,QAAUC,eAEzB,IAIeC,EAJH,CACRlC,UAAU,WAAD,4BAAE,sBAAAmC,EAAA,sEAAkBL,IAAMM,IAAI,qBAA5B,mFAAF,kDAAC,I,WCHJC,GAAV,SAAUA,IAAV,iEACI,OADJ,SACUC,YAAI,CACNC,YAAW/C,EAAOC,MAAME,WAAd,UAA0B,oFACjB,OADiB,SACX6C,YAAKN,EAAIlC,WADE,oBAC1ByC,EAD0B,kBAE7BA,OAF6B,EAE7BA,EAAQC,MAFqB,gBAG5B,OAH4B,SAGtBC,YAAInD,EAAOI,SAASC,YAAY,CAClC+C,OAAQH,EAAOC,KAAKA,KAAKG,UAJD,6CAF5C,uCAceR,Q,WClBLA,GAAV,SAAUA,IAAV,iGAIeA,Q,WCALS,GAAV,SAAUA,IAAV,iEACI,OADJ,SACUR,YAAI,CACNS,IACAC,MAHR,uCAOeF,Q,SCLTG,EAAiBC,cAEjBC,EAAQC,sBAAYpC,EAAUqC,8BAAoBC,0BAAgBL,KAExEA,EAAeM,IAAIT,GAEJK,QCNXK,EACAL,EADAK,SAGSC,EAAaC,6BAAmBC,EAAU/D,SAAU4D,GACpDI,EAAcF,6BAAmBG,EAAWjE,SAAU4D,GCLtDM,GAAiB,SAACC,EAAMC,GACjC,OAAOD,GAAQA,EAAKE,MAAK,SAAU9B,EAAG+B,GAClC,OAAOA,EAAEF,GAAU7B,EAAE6B,O,SCFhBG,GAAU,WAEnB,IAoBMC,EAAY,SAACC,GACfC,QAAQC,IAAI,SAASF,IAvBA,EA0BEG,0BAAe,CACtCC,UAzBc,SAACC,GDMO,IAACC,ECLvBf,EAAY/D,YAAY,CACpBY,YAAY,EACZD,UAAW,CACPN,GAAIwE,EAAIE,WAAWC,SACnBxE,SAAUqE,EAAIE,WAAWE,KACzBxE,OAAQ,MDAOqE,ECGRD,EAAIK,YDFvBC,OAAOC,aAAaC,QAAQ,eAAgBP,ICmBxCQ,SAAUlD,2EACVmD,aAAc,qBACdC,YAAY,EACZjB,cALIkB,EA1BiB,EA0BjBA,OAAQC,EA1BS,EA0BTA,OAQRC,EAAYC,2BAAgB,CAChCrB,YACAe,SAAUlD,2EACVmD,aAAc,qBACdM,gBAxBoB,SAAChB,GACrBd,EAAY/D,YAAY,CACpBW,UAAW,GACXC,YAAY,IAEEiE,EAAIK,YDJnBC,OAAOC,aAAaU,WAAW,mBCmB9BH,QAaR,OANAI,qBAAU,WACNhC,EAAY/D,YAAY,CACpB0F,aAEL,CAACA,IAEG,CAACD,SAAQE,Y,yECSpB,IAAMK,GAAcjH,IAAOkH,OAAV,MAGFC,GAzDf,WAAmB,IAAD,EAQVC,aAAY,SAAA7E,GAAK,OAAIA,EAAME,QARjB,IAGVZ,kBAHU,SAKNJ,EALM,EAIVG,UACIH,SAEJkF,EAPU,EAOVA,OAPU,EAUYpB,KAAnBmB,EAVO,EAUPA,OAAQE,EAVD,EAUCA,QAMf,OAJAI,qBAAU,WACNtB,QAAQC,IAAI,YAAYgB,KACzB,CAACA,IAGA,cAAC5G,EAAD,UACI,eAACG,EAAD,WACI,eAACK,EAAD,WACI,6BAAI,cAAC,IAAD,CAAM8G,GAAG,IAAT,yBACJ,+BACI,6BAAI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBACHxF,GAAc,6BAAI,cAAC,IAAD,CAAMwF,GAAG,kBAAT,sBACnB,6BAAI,cAAC,IAAD,CAAMA,GAAG,UAAT,4BAGZ,cAAC7G,EAAD,UAEQmG,GACA,6BACK9E,EACG,qCACI,6BAAI,eAAC,IAAD,CAAMwF,GAAG,kBAAT,UAA4B5F,EAA5B,uCACJ,6BAAI,cAAC,IAAD,CAAM4F,GAAG,iBAAiBC,QAASV,EAAnC,yBAGR,qCACI,6BAAI,cAAC,IAAD,CAAMS,GAAG,gBAAT,qBACJ,6BACI,cAACJ,GAAD,CAAaK,QAASZ,EAAtB,yC,sKChCxC,IAAMa,GAAYvH,IAAOG,IAAV,MAGTqH,GAAgBxH,IAAOyH,KAAV,MAGJC,GAjBf,YAA+B,IAAXC,EAAU,EAAVA,SAEhB,OACI,eAACJ,GAAD,WACI,cAAC,GAAD,IACA,cAACC,GAAD,UACKG,Q,kBCiBFC,OAxBf,YAA2D,IAA7B5D,EAA4B,EAA5BA,OAAQtC,EAAoB,EAApBA,OAAQf,EAAY,EAAZA,WAqB1C,MAAO,CAnBiB,SAAC,GAAwB,IACzCkD,EADkBgE,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,QAgB/B,MAbU,WAAPF,IACChE,EAAUG,EAAOgE,QAAUhE,EAAOiE,QAAO,SAACC,GAAD,OAAkC,IAA3BA,EAAEC,OAAOpF,QAAQ+E,OAE3D,WAAPD,IACChE,EAAUnC,GAAUA,EAAO0G,KAAI,SAAAjD,GAAI,OAAInB,EAAOqE,MAAK,SAAAC,GAAC,OAAIA,EAAEhH,KAAO6D,SAE3D,cAAP0C,IACChE,EAAUG,EAAOgE,QAAUrH,EAAWyH,KAAI,SAAAjD,GAAI,OAAInB,EAAOqE,MAAK,SAAAC,GAAC,OAAIA,EAAEhH,KAAO6D,UAEjE,IAAZ4C,IACClE,EAASqB,GAAerB,EAAO,WAG5BA,K,2tBClBR,IAAM0E,GAAcvI,YAAOwI,KAAPxI,CAAH,MAGXyI,GAAgBzI,IAAOG,IAAV,MAObuI,GAAY1I,IAAOG,IAAV,MAOTwI,GAAU3I,IAAO4I,IAAV,MASPC,GAAY7I,IAAO8I,GAAV,MCDPC,OAxBf,SAAmB3I,GAAQ,IAChB+E,EAAkB/E,EAAlB+E,KAAM6D,EAAY5I,EAAZ4I,SAEb,OACI,cAACT,GAAD,2BAAiBS,GAAjB,aAEQ7D,EAAK6C,QAAU7C,EAAKiD,KAAI,SAACF,GACrB,OACI,cAACO,GAAD,UACI,eAAC,IAAD,CAAMpB,GAAE,kBAAaa,EAAE5G,IAAvB,UACI,cAACoH,GAAD,UACI,cAACC,GAAD,CAASM,IAAKf,EAAEgB,kBAAmBC,IAAKjB,EAAEkB,UAE9C,cAACP,GAAD,CAAWQ,UAAU,KAArB,SAA2BnB,EAAEkB,YALjBlB,EAAE5G,W,gJCI9C,IAAMgI,GAAOtJ,IAAOG,IAAV,MAQKoJ,GApBf,SAAmBnJ,GAAQ,IAChBoJ,EAAiCpJ,EAAjCoJ,cAAerE,EAAkB/E,EAAlB+E,KAAM6D,EAAY5I,EAAZ4I,SAE5B,OACI,eAACM,GAAD,WACI,6BAAKE,IACJC,QAAQtE,EAAK6C,SAAW,cAAC,GAAD,CAAW7C,KAAMA,EAAM6D,SAAUA,Q,0JCR/D,IAAMU,GAAW1J,IAAOG,IAAV,MCsCNwJ,OApCf,SAAkBvJ,GAAO,IAAD,EAOhBA,EALAwJ,uBAFgB,MAEE,GAFF,EAGhB/H,EAIAzB,EAJAyB,WAHgB,EAOhBzB,EAHAqB,gBAJgB,MAIL,GAJK,EAKhBC,EAEAtB,EAFAsB,OACAsH,EACA5I,EADA4I,SAGJ,OACI,eAACU,GAAD,WACI,cAAC,GAAD,CACIV,SAAUA,EACVQ,cAAe,+CACfrE,KAAMyE,EAAgB,CAAC/B,GAAG,YAAaE,SAAQ,MAE/ClG,GAAc4H,QAAQ/H,EAAOsG,SACzB,cAAC,GAAD,CACIgB,SAAUA,EACVQ,cAAa,UAAK/H,EAAL,4DACb0D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUE,SAAQ,MAGxD,cAAC,GAAD,CACIyB,cAAe,qBACfR,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUC,IAAI,YAC5C,cAAC,GAAD,CACI0B,cAAe,kCACfR,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUC,IAAI,iBCAzC+B,OA7Bf,WAAiB,IAAD,EAIRzC,aAAY,SAAA7E,GAAK,OAAIA,KAJb,IAERD,IAFQ,IAED0B,cAFC,MAEQ,GAFR,MAEYrD,kBAFZ,MAEyB,GAFzB,MAGR8B,KAHQ,IAGAZ,kBAHA,aAGoBD,UAHpB,IAGiCF,cAHjC,MAG0C,GAH1C,MAG8CD,gBAH9C,MAGyD,GAHzD,IAMcmG,GAAoB,CAAC5D,SAAQtC,SAAQf,eAAxDiJ,EANK,qBAkBZ,OACI,cAAC,GAAD,CACIA,gBAAiBA,EACjB/H,WAAYA,EACZJ,SAAUA,EACVC,OAAQA,EACRsH,SAhBS,CACbc,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,WAAW,M,68EChBZ,IAAMC,GAAYpK,IAAOG,IAAV,MAETkK,GAAYrK,IAAOG,IAAV,MAGX,SAACC,GAAD,OAAWA,EAAMC,MAAMiK,UAIrBC,GAAUvK,IAAOG,IAAV,MAEPqK,GAAcxK,IAAOG,IAAV,MAEXsK,GAAYzK,IAAO4I,IAAV,MAGX,SAACxI,GAAD,OAAWA,EAAMC,MAAMiK,UAIrBI,GAAW1K,IAAOG,IAAV,MAMV,SAACC,GAAD,OAAWA,EAAMC,MAAMiK,UAKrBK,GAAQ3K,IAAO4K,GAAV,MAKLC,GAAO7K,IAAOG,IAAV,MAGJ2K,GAAS9K,IAAOG,IAAV,MAGN4K,GAAU/K,IAAOG,IAAV,MAGP6K,GAAchL,IAAOG,IAAV,MAOX8K,GAAQjL,IAAOG,IAAV,MAGL+K,GAASlL,IAAOmL,KAAV,MAKNC,GAAcpL,IAAOG,IAAV,MAUXkL,GAAiBrL,IAAOG,IAAV,MAEdmL,GAAatL,IAAOkH,OAAV,MAsBVqE,GAAYvL,YAAOwL,KAAPxL,CAAH,M,6BCjCtB,SAASyL,KACL,OACI,qCAAE,cAAC,KAAD,IAAF,IAAoB,kFAI5B,SAASC,KACL,OACI,qCAAE,cAACH,GAAD,IAAF,IAAgB,4EAMTI,OApEf,SAAqBvL,GAAO,IAEpBwL,EACAxL,EADAwL,KAAMC,EACNzL,EADMyL,UAAWC,EACjB1L,EADiB0L,QAASjK,EAC1BzB,EAD0ByB,WAAYkK,EACtC3L,EADsC2L,iBAAkB/C,EACxD5I,EADwD4I,SAI5D,OACI,cAACoB,GAAD,UACI,eAACC,GAAD,WACI,eAACE,GAAD,WACI,cAACC,GAAD,UAAa,cAACC,GAAD,CAAWxB,IAAK2C,EAAKI,mBAAoB7C,IAAI,OAEtDtH,GACA,cAACyJ,GAAD,CACIpK,KAAK,SACLoG,QAAS,kBAAMyE,EAAiBD,IAChCzC,UAAW4C,KAAG,CAACC,OAAQJ,IAH3B,SAIKA,EAAU,cAACL,GAAD,IAAoB,cAACC,GAAD,SAI3C,eAAChB,GAAD,WACI,cAACC,GAAD,UAAQiB,EAAKO,aACb,cAACtB,GAAD,UAAOe,EAAKQ,OACZ,eAACtB,GAAD,mCACWc,EAAKS,UAEhB,cAACrB,GAAD,UAAcY,EAAKU,mBACnB,eAACvB,GAAD,6BAAea,EAAKW,QAApB,YACA,eAACtB,GAAD,4BAGQW,EAAKzD,QAAUyD,EAAKzD,OAAOC,KAAI,SAACF,EAAEsE,GAC9B,OAAO,cAACtB,GAAD,UAAmBhD,GAANsE,SAIhC,eAACpB,GAAD,WACI,+BAAKQ,EAAKxC,MAAV,6CAEIyC,QACsBY,WAAfZ,GAA4BA,EAAU7D,QAC7C,cAAC,GAAD,CAAW7C,KAAM0G,EAAW7C,SAAUA,IAE1C,cAACqC,GAAD,gB,4eCnDjB,IAAMqB,GAAc1M,IAAOG,IAAV,MAGA,SAACC,GAAD,OAAWA,EAAMuM,YAAN,cAA2BvM,EAAMuM,WAAjC,QAatBC,GAAiB5M,YAAO0J,GAAP1J,CAAH,MC2BZ6M,OA1Cf,SAA0BvL,EAAI0C,EAAQtC,GAAQ,IAAD,EACXoL,oBAAS,GADE,oBAClChB,EADkC,KACzBiB,EADyB,OAEjBD,mBAAS,IAFQ,oBAElClB,EAFkC,KAE5BoB,EAF4B,OAGPF,mBAAS,IAHF,oBAGlCjB,EAHkC,KAGvBoB,EAHuB,KAuCzC,OAlCAjG,qBAAU,WAEN,IAAMkG,EAAalJ,EAAOgE,QAAUhE,EAAOqE,MAAK,SAACH,GAAD,OAAO5G,IAAO4G,EAAE5G,MAChE0L,EAAQE,KACT,CAAClJ,EAAQ1C,IAGZ0F,qBAAU,WAEN,IAAMmG,EAAkBvB,GAAQnC,QAAQ/H,EAAO2G,MAAK,SAAClD,GAAD,OAAUA,IAASyG,EAAKtK,OAEtE8L,EAAWxB,EAAKzD,OAChBkF,EAAkBD,GAAYpJ,EAAOiE,QAAO,SAAC9C,GAC/C,IAAI,IAAI+C,EAAE,EAAGA,EAAEkF,EAASpF,OAAQE,IAC5B,IAAyC,IAAtC/C,EAAKgD,OAAOpF,QAAQqK,EAASlF,KAAc0D,EAAKtK,KAAO6D,EAAK7D,GAAI,OAAO,KAG5EuC,EAASqB,GAAemI,EAAiB,UAE/CN,EAAWI,GACXF,EAAapJ,KACd,CAAC+H,IAaG,CAACA,EAAMC,EAAWC,EAVA,SAACvJ,GAEtBwK,GAAYxK,GACTb,EAAO4L,SAAS1B,EAAKtK,IACpB0D,EAAY7C,aAAayJ,EAAKtK,IAE9B0D,EAAY9C,UAAU0J,EAAKtK,OCMxBiM,OAvCf,SAAgBnN,GAAO,IACZoN,EAASpN,EAAToN,MACDlM,EAAKmM,OAAOD,EAAME,OAAOpM,IAFb,EASd8F,aAAY,SAAA7E,GAAK,OAAIA,KATP,IAIdD,IAAO0B,cAJO,MAIE,GAJF,MAKdvB,KALc,IAMVb,UAAYF,cANF,MAMW,GANX,EAOVG,EAPU,EAOVA,WAPU,EAWmCgL,GAAiBvL,EAAI0C,EAAQtC,GAXhE,oBAWXkK,EAXW,KAWLC,EAXK,KAWMC,EAXN,KAWeC,EAXf,KAuBlB,OACI,cAACW,GAAD,CAAaC,WAAYf,EAAK+B,0BAA9B,SACI,cAACf,GAAD,UACI,cAAC,GAAD,CACIhB,KAAMA,EACNC,UAAWA,EACXC,QAASA,EACTjK,WAAYA,EACZkK,iBAAkBA,EAClB/C,SAnBC,CACbc,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,WAAW,UCoBJyD,OAzCf,SAAmBxN,GAAO,IAAD,EAIjBA,EAFAwJ,uBAFiB,MAEC,GAFD,EAGjBZ,EACA5I,EADA4I,SAGJ,OACI,eAACU,GAAD,WACI,cAAC,GAAD,CACIF,cAAe,qBACfR,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUC,IAAI,YAC5C,cAAC,GAAD,CACI0B,cAAe,kCACfR,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUC,IAAI,aAC5C,cAAC,GAAD,CACI0B,cAAe,8CACfR,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUC,IAAI,kBAC5C,cAAC,GAAD,CACI0B,cAAe,kCACfR,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUC,IAAI,cAC5C,cAAC,GAAD,CACI0B,cAAe,4BACfR,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUC,IAAI,YAC5C,cAAC,GAAD,CACI0B,cAAe,kCACfR,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUC,IAAI,cAC5C,cAAC,GAAD,CACI0B,cAAe,4BACfR,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUC,IAAI,iBCTzCmD,OAzBf,WAAkB,IAAD,EAGT7D,aAAY,SAAA7E,GAAK,OAAIA,KADrBD,IAAO0B,OAFE,EAKa4D,GAAoB,CAAC5D,YALlC,MAEO,GAFP,IAKN4F,EALM,qBAiBb,OACI,cAAC,GAAD,CACIA,gBAAiBA,EACjBZ,SAbS,CACbc,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,WAAW,M,2ECNnB,IAAM5C,GAAYvH,IAAOG,IAAV,MAIA0N,GAbf,WAEI,OACI,cAAC,GAAD,sB,gpCCHD,IAAMtG,GAAYvH,IAAOG,IAAV,MACE,SAACC,GAAD,OAAWA,EAAMuM,YAAN,cAA2BvM,EAAMuM,WAAjC,QAoBtBmB,GAAa9N,IAAOG,IAAV,MAWV4N,GAAa/N,YAAOgO,KAAPhO,CAAH,MCaRiO,OA1Cf,SAAmB7N,GAAQ,IAEnB8N,EACA9N,EADA8N,KAAMvB,EACNvM,EADMuM,WAAYwB,EAClB/N,EADkB+N,aAGtB,OACI,cAAC,GAAD,CAAWxB,WAAYA,EAAvB,SACI,eAACmB,GAAD,WACI,8CACA,eAACC,GAAD,CACI7H,KAAK,eACLmD,UAAU,aACV6E,KAAMA,EACNE,SAAUD,EAJd,UAMI,cAAC,KAAKE,KAAN,CACInI,KAAK,SACLmD,UAAU,YAFd,SAII,cAAC,KAAD,CAAOiF,OAAQ,cAACC,GAAA,EAAD,CAAclF,UAAU,wBAAyBmF,YAAY,eAEhF,cAAC,KAAKH,KAAN,CAAWnI,KAAK,eAAhB,SACI,cAAC,KAAD,CACIoI,OAAQ,cAACG,GAAA,EAAD,CAAcpF,UAAU,wBAChCnI,KAAK,WACLsN,YAAY,eAIpB,eAAC,KAAKH,KAAN,WACI,cAAC,KAAD,CAAQnN,KAAK,UAAUwN,SAAS,SAASrF,UAAU,YAAnD,oBADJ,MAIO,cAAC,IAAD,CAAMhC,GAAI,eAAgBgC,UAAU,kBAApC,uCC0BZsF,OA9Df,SAA0BtN,EAAO6M,EAAMU,EAAS/M,GAAa,IAAD,EAClBiL,oBAAS,GADS,oBACjD+B,EADiD,KACpCC,EADoC,KA2DxD,OAxDAC,uBAAY,WACR,GAAIlN,EAGA,OAFAmN,MAAM,yEACNJ,EAAQhM,KAAK,MACN,IAEZ,CAACf,IAEJmF,qBAAU,WACN,GAAI6H,EAIA,OAFAD,EAAQhM,KAAK,KACbsL,EAAKe,eACE,IAEZ,CAACJ,IAyCG,CAtCc,SAACK,GAClBJ,GAAe,GAEf,IAAMjL,EAASxC,EAAM2G,QAAU3G,EAAMgH,MAAK,SAAClD,GAAD,OAAUA,EAAK5D,SAAW2N,EAAO3N,UAE3E,OAAIsC,EACIA,EAAOrC,eAAiB0N,EAAO1N,aAa3B0N,EAAO1N,cACPwN,MAAM,sFACC,IAEPA,MAAM,mEACC,IAjBXA,MAAM,sDACNF,GAAe,QACf9J,EAAY/D,YAAY,CACpBY,YAAY,EACZD,UAAW,CACPN,GAAIuC,EAAOvC,GACXC,OAAQsC,EAAOtC,OACfE,SAAUoC,EAAOpC,SACjBC,OAAQmC,EAAOnC,WAavBwN,EAAO3N,QACPyN,MAAM,gFACC,IAEPA,MAAM,mEACC,MCxBRG,OA1Bf,YAA2B,IAAXP,EAAU,EAAVA,QAAU,EACPZ,KAAKoB,UAAblB,EADe,uBAEcpB,mBAAS,IAFvB,oBAEfH,EAFe,KAEH0C,EAFG,OAMlBjI,aAAY,SAAA7E,GAAK,OAAIA,KANH,IAIlBD,IAAM0B,cAJY,MAIH,GAJG,MAKlBvB,KALkB,IAKXpB,aALW,MAKH,GALG,MAKCQ,kBALD,SAQtBmF,qBAAU,WACN,IAAMnD,EAASG,EAAOgE,QAAUhE,EAAOsL,KAAKC,MAAMD,KAAKE,SAAWxL,EAAOgE,SAAS2F,0BAClF9J,GAAUwL,EAAcxL,KACzB,CAACG,IAXkB,MAaC2K,GAAiBtN,EAAO6M,EAAMU,EAAS/M,GAAvDsM,EAbe,qBAgBtB,OACI,cAAC,GAAD,CACID,KAAMA,EACNvB,WAAYA,EACZwB,aAAcA,K,8GCF1B,SAASsB,KACL,OACI,cAACC,GAAD,0FAIR,IAAMA,GAAU1P,IAAOG,IAAV,MAKEwP,GA/Bf,SAAqBvP,GAAO,IAEpByB,EACAzB,EADAyB,WAAY+H,EACZxJ,EADYwJ,gBAAiBnI,EAC7BrB,EAD6BqB,SAAUC,EACvCtB,EADuCsB,OAAQsH,EAC/C5I,EAD+C4I,SAGnD,OACI,eAACU,GAAD,WAEQ7H,GACA,cAAC,GAAD,CACI2H,cAAa,UAAK/H,EAAL,4DACbuH,SAAUA,EACV7D,KAAMyE,EAAgB,CAAC/B,GAAG,SAAUE,SAAQ,IAC5CA,SAAS,KAEfrG,EAAOsG,QAAU,cAACyH,GAAD,QCchBG,OA7Bf,WAAkB,IAAD,EAITxI,aAAY,SAAA7E,GAAK,OAAIA,KAJZ,IAETD,IAAO0B,cAFE,MAEO,GAFP,MAGTvB,KAHS,IAGDZ,kBAHC,aAGmBD,UAHnB,IAGgCF,cAHhC,MAGyC,GAHzC,MAG6CD,gBAH7C,MAGwD,GAHxD,IAMamG,GAAoB,CAAC5D,SAAQtC,WAAhDkI,EANM,qBAiBb,OACI,cAAC,GAAD,CACI/H,WAAYA,EACZ+H,gBAAiBA,EACjBnI,SAAUA,EACVC,OAAQA,EACRsH,SAfS,CACbc,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,WAAW,M,+iBChBZ,IAAM0F,GAAY7P,IAAOG,IAAV,MAWT4N,GAAa/N,YAAOgO,KAAPhO,CAAH,MAQV8P,GAAmB9P,IAAOG,IAAV,MAClB,SAACC,GAAD,OAAWA,EAAMC,MAAMC,aC4CnByP,OA/Df,SAAkB3P,GAAQ,IAElB8N,EAEA9N,EAFA8N,KAAMC,EAEN/N,EAFM+N,aACN6B,EACA5P,EADA4P,eAAgBvN,EAChBrC,EADgBqC,KAAMwN,EACtB7P,EADsB6P,MAG1B,OACI,eAACJ,GAAD,WACI,6CACA,eAAC,GAAD,CAAY3B,KAAMA,EAAME,SAAUD,EAAlC,UACI,cAAC,KAAKE,KAAN,CAAWnI,KAAK,WAAhB,SACI,cAAC,KAAD,CACIsI,YAAY,WACZ0B,MAAOzN,EAAKnB,GACZ4E,KAAK,KACLiK,SAAU,SAACC,GAAD,OAAOJ,EAAeI,QAGvCH,EAAM3O,IAAM,cAACwO,GAAD,UAAmBG,EAAM3O,KAEtC,cAAC,KAAK+M,KAAN,CAAWnI,KAAK,WAAhB,SACI,cAAC,KAAMmK,SAAP,CACI7B,YAAY,WACZtN,KAAK,WACLgP,MAAOzN,EAAK6N,SACZpK,KAAK,WACLiK,SAAU,SAACC,GAAD,OAAOJ,EAAeI,QAIvCH,EAAMK,UAAY,cAACR,GAAD,UAAmBG,EAAMK,WAE5C,cAAC,KAAKjC,KAAN,CAAWnI,KAAK,iBAAhB,SACI,cAAC,KAAMmK,SAAP,CACI7B,YAAY,kBACZtN,KAAK,WACLgP,MAAOzN,EAAK8N,eACZrK,KAAK,iBACLiK,SAAU,SAACC,GAAD,OAAOJ,EAAeI,QAGvCH,EAAMM,gBAAkB,cAACT,GAAD,UAAmBG,EAAMM,iBAElD,cAAC,KAAKlC,KAAN,CAAWnI,KAAK,WAAhB,SACI,cAAC,KAAD,CACIsI,YAAY,gBACZ0B,MAAOzN,EAAKhB,SACZyE,KAAK,WACLiK,SAAU,SAACC,GAAD,OAAOJ,EAAeI,QAGvCH,EAAMxO,UAAY,cAACqO,GAAD,UAAmBG,EAAMxO,WAC5C,cAAC,KAAK4M,KAAN,UACI,cAAC,KAAD,CAAQnN,KAAK,UAAUwN,SAAS,SAAhC,2B,SC/Bd8B,GAAsB,SAACF,EAAUG,GACnC,OAAIH,GAAYA,IAAaG,EAClB,6GAEPH,IAAmB,OAAPG,QAAO,IAAPA,OAAA,EAAAA,EAASzI,QAAS,EACvB,0EAEPsI,IAAmB,OAAPG,QAAO,IAAPA,OAAA,EAAAA,EAASzI,QAAS,GACvB,iFAEJ,MAqCI0I,OArBf,YAA2D,IAAxCD,EAAuC,EAAvCA,QAASP,EAA8B,EAA9BA,MAAOzN,EAAuB,EAAvBA,KAAMwN,EAAiB,EAAjBA,MAAOU,EAAU,EAAVA,SACxCC,EAAW,GAgBf,OAde,OAAZH,IAAqBA,GAAWP,GAAwB,IAAhBS,EAASrP,MAChDsP,EAAStP,GAxDD,SAACmP,EAASE,GACtB,OAAIF,GAAWE,EACJ,sDAEPF,EAAQzI,OAAS,EACV,0EAEPyI,EAAQzI,OAAS,GACV,iFAEJ,KA8CW6I,CAAQJ,EAAUP,EAAQzN,EAAKnB,GAAIqP,EAASrP,MAE/C,aAAZmP,IAA2BA,GAAWP,GAA8B,IAAtBS,EAASL,YACtDM,EAASN,SA9CK,SAACG,EAASE,GAC5B,OAAIF,GAAWE,EACJ,sDAEPF,EAAQzI,OAAS,EACV,0EAEPyI,EAAQzI,OAAS,GACV,iFAEJ,KAoCiB8I,CAAcL,EAAUP,EAAQzN,EAAK6N,SAAUK,EAASL,UAC5EM,EAASL,eAAiBC,GAAoBC,EAAUP,EAAQzN,EAAK6N,SAAxB,OAAkC7N,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAM8N,kBAE1E,mBAAZE,IAAiCA,GAAWP,GAAoC,IAA5BS,EAASJ,kBAC5DK,EAASL,eAAiBC,GAAmB,OAAC/N,QAAD,IAACA,OAAD,EAACA,EAAM6N,SAAUG,EAAUP,EAAH,OAAWzN,QAAX,IAAWA,OAAX,EAAWA,EAAM8N,kBAE3E,aAAZE,IAA2BA,GAAWP,GAA8B,IAAtBS,EAASlP,YACtDmP,EAASnP,SA3BK,SAACgP,EAASE,GAC5B,OAAIF,GAAWE,EACJ,sDAEPF,EAAQzI,OAAS,EACV,0EAEPyI,EAAQzI,OAAS,GACV,iFAEJ,KAiBiB+I,CAAcN,EAAUP,EAAQzN,EAAKhB,SAAUkP,EAASlP,WAGzE,2BAAIwO,GAAUW,ICtBVxB,OA5Cf,SAAiB4B,EAAeC,EAAeN,GAAW,IAAD,EAC7B7D,mBAAS,IADoB,oBAC9CrK,EAD8C,KACxCyO,EADwC,OAE3BpE,mBAAS,IAFkB,oBAE9CmD,EAF8C,KAEvCkB,EAFuC,OAGfrE,oBAAS,GAHM,oBAG9C+B,EAH8C,KAGjCC,EAHiC,KAM/CkB,EAAiBjB,uBAAY,SAACqB,GAChCtB,GAAe,GADuB,MAERsB,EAAEhL,OAApBqL,EAF0B,EAEjCvK,KAAgBgK,EAFiB,EAEjBA,MACfkB,EAAU,2BAAO3O,GAAP,mBAAcgO,EAAWP,IACzCgB,EAAQE,GAGR,IAAMvN,EAAS6M,GAAS,CAACD,UAASP,QAAOzN,OAAMwN,QAAOU,aACtDQ,EAAStN,KAEV,CAACpB,EAAMwN,IAwBV,MAAO,CAACxN,EAAMyO,EAASjB,EAAOkB,EAAUnB,EArBnB,WAEjBlB,GAAe,GAGf,IAAMjL,EAAS6M,GAAS,CAACjO,OAAMwN,QAAOU,aACtCQ,EAAStN,GAGT,IAAMwN,EAAcC,OAAOpC,OAAOrL,GACd4F,QAAQ4H,EAAYrJ,SAAWqJ,EAAYE,OAAM,SAACrJ,GAAD,OAAa,OAANA,MAGxE8I,EAAcC,EAAcxO,IAC5BqM,GAAe,IAEfE,MAAM,mEAKwDH,ICL3DF,OAnCf,SAA0BvO,GAAQ,IAE1B8N,EAEA9N,EAFA8N,KAAMyC,EAENvQ,EAFMuQ,SAAU9O,EAEhBzB,EAFgByB,WAChB+M,EACAxO,EADAwO,QAASoC,EACT5Q,EADS4Q,cAAeC,EACxB7Q,EADwB6Q,cAHC,EAUzB7B,GAAQ4B,EAAeC,EAAeN,GAVb,oBAOzBlO,EAPyB,KAOnByO,EAPmB,KAOVjB,EAPU,KAOHkB,EAPG,KAQzBnB,EARyB,KAQT7B,EARS,YASzBU,OATyB,SAgC7B,OApBA7H,qBAAU,WACN,GAAGnF,EAGC,OAFAmN,MAAM,mEACNJ,EAAQhM,KAAK,MACN,IAEZ,CAACf,IAEJmF,qBAAU,WACH6H,IAECG,MAAM,8EACNkC,EAAQ,IACRC,EAAS,IACTjD,EAAKe,cACLL,EAAQhM,KAAK,oBAElB,CAACiM,IAGG,CAACpM,EAAMwN,EAAO9B,EAAc6B,ICUxBwB,OApCf,YAA0B,IAAX5C,EAAU,EAAVA,QAAU,EAGjBxH,aAAY,SAAA7E,GAAK,OAAIA,EAAME,QAD3BZ,kBAFiB,WAKNmM,KAAKoB,UAAblB,EALc,uBAkB+BS,GAAiB,CACjET,OAAMyC,SAbO,CAACrP,IAAK,EAAMgP,UAAW,EAAMC,gBAAiB,EAAM9O,UAAW,GAa5DI,aAAY+M,UAC5BoC,cAZkB,SAACS,GAAD,OAASzM,EAAY/C,UAAUwP,IAYlCR,cAXG,SAACS,GAAD,MAAU,CAC5BpQ,G9BRGgO,KAAKE,SAASmC,SAAS,IAAIC,UAAU,EAAG,IAAMtC,KAAKE,SAASmC,SAAS,IAAIC,UAAU,EAAG,I8BSzFrQ,OAASmQ,EAAIpQ,GACbE,aAAekQ,EAAIpB,SACnB7O,SAAWiQ,EAAIjQ,SACfC,OAAQ,GACRC,WAAY,OAfK,oBAkBdc,EAlBc,KAkBRwN,EAlBQ,KAkBD9B,EAlBC,KAkBa6B,EAlBb,KAwBrB,OACI,cAAC,GAAD,CACI9B,KAAMA,EACNC,aAAcA,EACd6B,eAAgBA,EAChBvN,KAAMA,EACNwN,MAAOA,K,2EC3BnB,IAAM1I,GAAYvH,IAAOG,IAAV,MAIA0R,GAbf,WAEI,OACI,cAAC,GAAD,uBCsBOC,OAxBf,YAA2B,IAAVlD,EAAS,EAATA,QAAS,EAGlBxH,aAAY,SAAA7E,GAAK,OAAIA,EAAME,QAD3BZ,kBAFkB,SAqBtB,OAhBAmF,qBAAU,WACN,OAAGnF,GACCmD,EAAY/D,YAAY,CACpBW,UAAW,GACXC,YAAY,IAEhBmN,MAAM,4DACNJ,EAAQhM,KAAK,MACN,IAEPoM,MAAM,yEACNJ,EAAQhM,KAAK,MACN,KAEZ,IAEI,MCHImP,OAdf,YAA4B,IAAXnD,EAAU,EAAVA,QAEb,OACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAOoD,KAAM,gBAAiBC,UAAW9C,KACzC,cAAC,KAAD,CAAO6C,KAAM,eAAgBC,UAAWT,GAAM5C,QAASA,IACvD,cAAC,KAAD,CAAOoD,KAAM,iBAAkBC,UAAWH,GAAQlD,QAASA,IAC3D,cAAC,KAAD,CAAOoD,KAAM,kBAAmBC,UAAWrC,KAC3C,cAAC,KAAD,CAAOoC,KAAM,kBAAmBC,UAAWJ,SChBjDK,GAEY,QAFZA,GAGU,SAHVA,GAIY,SAJZA,GAKU,SALVA,GAMO,SAWE7R,GARD,CACVC,UAAY,UACZgK,OAAM,gCAVG,QAUH,KACN6H,OAAM,gCAA4BD,GAA5B,4BAAgEA,GAAhE,KACNE,OAAM,gCAA4BF,GAA5B,4BAAgEA,GAAhE,KACNG,QAAQ,yBAAD,OAA2BH,GAA3B,MCAII,GAXK,WAAO,IAEhBC,EAAYC,eAAZD,SAMP,OAJAvL,qBAAU,WACNZ,OAAOqM,SAAS,EAAG,KACpB,CAACF,IAEG,M,UCwCIG,OAnCf,WAAe,IAAD,EAGNtL,aAAY,SAAA7E,GAAK,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAOD,OAD5B0B,cAFM,MAEG,GAFH,EAYV,OAPAgD,qBAAU,WACFhD,EAAOgE,SACPtC,QAAQC,IAAI,oBACZd,EAAWzD,eAEhB,IAGC,eAAC,IAAD,CAAef,MAAOA,GAAtB,UACI,cAAC,GAAD,IACA,cAAC,GAAD,UACI,cAAC,KAAD,UACI,eAAC,KAAD,CACIsS,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,SAAU,CAAEF,QAAS,GACrBvJ,UAAU,iBAJd,UAMI,cAAC,KAAD,CAAO0J,OAAK,EAACf,KAAM,IAAKC,UAAWpI,KACnC,cAAC,KAAD,CAAOmI,KAAM,cAAeC,UAAW1E,KACvC,cAAC,KAAD,CAAOyE,KAAM,SAAUC,UAAWhH,KAClC,cAAC,KAAD,CAAO+G,KAAM,UAAWC,UAAWpE,KACnC,cAAC,KAAD,CAAOmE,KAAM,UAAWC,UAAWF,gB,OCnC3D/O,IAAOC,SAEP+P,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAU3O,MAAOA,EAAjB,SACI,cAAC,IAAD,CAAQ4O,SAAU9P,eAAlB,SACI,cAAC,GAAD,UAIZ+P,SAASC,eAAe,W","file":"static/js/main.d4ba5974.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Header = styled.header`\n  border-bottom: 1px solid #333;\n  background: #121212;\n  font-size: 13px;\n`\nexport const HeaderWrap = styled.div`\n  height: 50px;\n  max-width: 1400px;\n  margin: 0 auto;\n  width: 93%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  h1 {\n    margin-right: 10px;\n    color: ${(props) => props.theme.mainColor};\n    font-weight: 500;\n    font-family: 'Montserrat', sans-serif;\n    display: flex;\n    align-items: center;\n  }\n\n  ul {\n    display: flex;\n    align-items: center;\n    height: 50px;\n\n    li {\n      padding: 0 20px;\n    }\n  }\n`\nexport const HeaderLeft = styled.div`\n  display: flex;\n  align-content: center;\n`\nexport const HeaderRight = styled.div`\n`\n","//initialState\nconst initialState = {\n    openSidebar : false,\n    bestMovies: [26185, 26232, 26213, 26229, 26231, 26229, 26216, 26182, 26206, 26199],\n}\n\n//action\nconst Action = {\n    Types: {\n        UPDATE_STATE: \"@@APP/UPDATE_STATE\",\n        GET_MOVIES: \"@@APP/GET_MOVIES\",\n    },\n    Creators: {\n        updateState: (props) => ({\n            type: Action.Types.UPDATE_STATE,\n            payload: props\n        }),\n        getMovies: () => ({\n            type:Action.Types.GET_MOVIES,\n        })\n    }\n}\n\n//reducer\nconst reducer = (state = initialState, action) => {\n    switch(action.type){\n        default: return state;\n        case Action.Types.UPDATE_STATE: {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n    }\n}\n    \n\nexport {reducer, Action}","import produce from \"immer\";\n\n//initialState\nconst initialState = {\n    //더미데이터, 데이터 양식\n    Users : [\n        {\n            id:\"7c1a38ba-2ebe-4600-a546-9f7482766aee\",\n            userId:\"admin\",\n            userPassword:\"1234\",\n            nickname:\"ye-r1\",\n            myList: [26231, 26229, 26199, 26216, 26182, 26206],\n            SearchList: [],\n        },\n    ],\n    LoginData: {},\n    isLoggedIn: false,\n}\n\n//action\nconst Action = {\n    Types: {\n        UPDATE_STATE: \"@@USER/UPDATE_STATE\",\n        ADDED_USER: \"@@USER/ADDED_USER\",\n        ADD_MYLIST: \"@@USER/ADD_MYLIST\",\n        REMOVE_MYLIST: \"@@USER/REMOVE_MYLIST\",\n    },\n    Creators: {\n        updateState: (props) => ({\n            type: Action.Types.UPDATE_STATE,\n            payload: props\n        }),\n        addedUser: (props) => ({\n            type: Action.Types.ADDED_USER,\n            payload:props\n        }),\n        addMyList: (props) => ({\n            type: Action.Types.ADD_MYLIST,\n            payload:props\n        }),\n        removeMyList: (props) => ({\n            type: Action.Types.REMOVE_MYLIST,\n            payload:props\n        }),\n    }\n\n}\n\n//reducer\nconst reducer = (state = initialState, action) => {\n    return produce(state, draft => {\n        switch(action.type){\n            default: return draft;\n            case Action.Types.UPDATE_STATE: {\n                return {\n                    ...state,\n                    ...action.payload\n                }\n            }\n            case Action.Types.ADDED_USER: {\n                draft.Users.push(action.payload);\n                break;\n            }\n            case Action.Types.ADD_MYLIST: {\n                draft.LoginData.myList.unshift(action.payload);\n                break;\n            }\n            case Action.Types.REMOVE_MYLIST: {\n                draft.LoginData.myList.splice(draft.LoginData.myList.indexOf(action.payload),1);\n                break;\n            }\n        }\n    });\n}\n    \n\nexport {reducer, Action}","import {combineReducers} from \"redux\";\nimport {reducer as appReducer} from \"./app/redux\";\nimport {reducer as userReducer} from \"./user/redux\";\n\nconst reducers = combineReducers({\n    app: appReducer,\n    user: userReducer\n})\n\nexport default reducers;","import axios from \"axios\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\naxios.defaults.baseURL = process.env.REACT_APP_SITE_URL;\n\nconst API = {\n    getMovies: async () => await axios.get(\"/list_movies.json\"),\n}\n\nexport default API;","import {all, call, put, takeLatest} from \"redux-saga/effects\";\nimport {Action} from \"./redux\";\nimport API from \"../../api\";\n\nfunction* saga(){\n    yield all([\n        takeLatest(Action.Types.GET_MOVIES, function* (){\n            const result = yield call(API.getMovies);\n            if(result?.data) {\n                yield put(Action.Creators.updateState({\n                    Movies: result.data.data.movies\n                }))\n            }\n        }),\n\n    ])\n}\n\nexport default saga;","function* saga(){\n\n}\n\nexport default saga;","import {all} from \"redux-saga/effects\";\nimport appSaga from \"./app/saga\";\nimport userSaga from \"./user/saga\";\n\nfunction* sagas (){\n    yield all([\n        appSaga(),\n        userSaga(),\n    ])\n}\n\nexport default sagas;","import {createStore, applyMiddleware} from \"redux\";\nimport reducers from \"./reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport sagas from \"./sagas\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(sagaMiddleware)));\n\nsagaMiddleware.run(sagas);\n\nexport default store;","import {bindActionCreators} from \"redux\";\nimport store from \"./store\";\nimport {Action as AppAction} from \"./app/redux\";\nimport {Action as UserAction} from \"./user/redux\";\n\nconst {\n    dispatch\n} = store;\n\nexport const appActions = bindActionCreators(AppAction.Creators, dispatch);\nexport const userActions = bindActionCreators(UserAction.Creators, dispatch);","export const assendingSort = (item, target) => {\n    return item && item.sort(function (a, b) {\n        return a[target] - b[target];\n    })\n}\nexport const descendingSort = (item, target) => {\n    return item && item.sort(function (a, b) {\n        return b[target] - a[target];\n    })\n}\nexport const guid = () => {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n}\nexport const setAccessToken = (token) => {\n    window.localStorage.setItem('access_token', token);\n}\nexport const getAccessToken = () => {\n    return window.localStorage.getItem('access_token');\n}\nexport const removeAccessToken = () => {\n    return window.localStorage.removeItem('access_token');\n}","import {userActions} from \"../redux/actionCreators\";\nimport {removeAccessToken, setAccessToken} from \"../utils/common\";\nimport {useGoogleLogin, useGoogleLogout} from \"react-google-login\";\nimport {useEffect} from \"react\";\n\nexport const useAuth = () => {\n\n    const onSuccess = (res) => {\n        userActions.updateState({\n            isLoggedIn: true,\n            LoginData: {\n                id: res.profileObj.googleId,\n                nickname: res.profileObj.name,\n                myList: [],\n            }\n        })\n        setAccessToken(res.accessToken);\n    }\n\n    const onLogoutSuccess = (res) => {\n        userActions.updateState({\n            LoginData: {},\n            isLoggedIn: false,\n        })\n        removeAccessToken(res.accessToken);\n    }\n\n    const onFailure = (err) => {\n        console.log('@@ err',err);\n    }\n\n    const { signIn, loaded } = useGoogleLogin({\n        onSuccess,\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n        cookiePolicy: 'single_host_origin',\n        isSignedIn: true,\n        onFailure,\n    })\n\n    const { signOut } = useGoogleLogout({\n        onFailure,\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n        cookiePolicy: 'single_host_origin',\n        onLogoutSuccess\n    })\n\n    useEffect(() => {\n        userActions.updateState({\n            loaded\n        })\n    }, [loaded])\n\n    return {signIn, signOut}\n}","import React, {useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {Header, HeaderLeft, HeaderRight, HeaderWrap} from \"./AppBar.Styled\";\nimport {useSelector} from \"react-redux\";\nimport {useAuth} from \"../../../hooks/useAuth\";\n\nfunction AppBar() {\n\n    const {\n        isLoggedIn = false,\n        LoginData: {\n            nickname\n        },\n        loaded\n    } = useSelector(state => state.user);\n\n    const {signIn, signOut} = useAuth();\n    \n    useEffect(() => {\n        console.log('@@ loaded',loaded);\n    }, [loaded])\n    \n    return (\n        <Header>\n            <HeaderWrap>\n                <HeaderLeft>\n                    <h1><Link to=\"/\">Movie App</Link></h1>\n                    <ul>\n                        <li><Link to=\"/genre\">Genre</Link></li>\n                        {isLoggedIn && <li><Link to=\"/member/my-list\">MyList</Link></li>}\n                        <li><Link to=\"/search\">Search</Link></li>\n                    </ul>\n                </HeaderLeft>\n                <HeaderRight>\n                    {\n                        loaded &&\n                        <ul>\n                            {isLoggedIn ? (\n                                <>\n                                    <li><Link to=\"/member/profile\">{nickname}님의 프로필</Link></li>\n                                    <li><Link to=\"/member/logout\" onClick={signOut}>logout</Link></li>\n                                </>\n                            ) : (\n                                <>\n                                    <li><Link to=\"/member/login\">login</Link></li>\n                                    <li>\n                                        <ButtonLogin onClick={signIn}>\n                                            google login\n                                        </ButtonLogin>\n                                    </li>\n                                </>\n                            )}\n                        </ul>\n                    }\n                </HeaderRight>\n            </HeaderWrap>\n        </Header>\n    )\n}\n\nconst ButtonLogin = styled.button`\n`\n\nexport default AppBar;","import React from \"react\";\nimport styled from \"styled-components\";\nimport AppBar from \"../AppBar\";\n\nfunction AppLayout({children}){\n\n    return(\n        <Container>\n            <AppBar />\n            <MainContainer>\n                {children}\n            </MainContainer>\n        </Container>\n    )\n}\nconst Container = styled.div`\n  font-size: 13px;\n`\nconst MainContainer = styled.main`\n`\n\nexport default AppLayout;","import React from \"react\";\nimport {descendingSort} from \"../../../utils/common\";\n\nfunction MovieListController({Movies, myList, bestMovies}){\n\n    const MovieListFilter = ({el, val, sorting}) => {\n        let result;\n\n        if(el === \"genres\") {\n            result =  Movies.length && Movies.filter((i) => i.genres.indexOf(val) !== -1);\n        }\n        if(el === \"myList\") {\n            result =  myList && myList.map(item => Movies.find(m => m.id === item));\n        }\n        if(el === \"recommend\") {\n            result =  Movies.length && bestMovies.map(item => Movies.find(m => m.id === item));\n        }\n        if(sorting !== false) {\n            result = descendingSort(result,\"rating\");\n        }\n\n        return result;\n    }\n\n    return [MovieListFilter];\n}\n\nexport default MovieListController;","import styled from \"styled-components\";\nimport Slider from \"react-slick\";\n\nexport const MovieSlider = styled(Slider)`\n  margin-top: 10px;\n`\nexport const MovieListItem = styled.div`\n  padding: 0 3px;\n  box-sizing: border-box;\n  &:hover img{\n    opacity: 0.4;\n  }\n`\nexport const ItemImage = styled.div`\n  height: 0;\n  overflow: hidden;\n  position: relative;\n  padding-bottom: 85%;\n`\n\nexport const ItemIMG = styled.img`\n  width: 100%;\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  transition: .4s;\n`\n\nexport const ItemTitle = styled.h3`\n  margin-top: 5px;\n  font-size: 13px;\n`","import React from \"react\";\nimport {MovieSlider, ItemImage, ItemIMG, ItemTitle, MovieListItem} from \"./MovieItem.Styled\";\nimport {Link} from \"react-router-dom\";\n\nfunction MovieItem(props) {\n    const {item, settings} = props;\n\n    return (\n        <MovieSlider {...settings}>\n            {\n                item.length && item.map((i) => {\n                    return (\n                        <MovieListItem key={i.id}>\n                            <Link to={`/detail/${i.id}`}>\n                                <ItemImage>\n                                    <ItemIMG src={i.large_cover_image} alt={i.title}/>\n                                </ItemImage>\n                                <ItemTitle className=\"e_\">{i.title}</ItemTitle>\n                            </Link>\n                        </MovieListItem>\n                    )\n                })\n            }\n        </MovieSlider>\n    )\n}\n\n\nexport default MovieItem;","import React from \"react\";\nimport MovieItem from \"./MovieItem\";\nimport styled from \"styled-components\";\n\nfunction MovieList(props) {\n    const {itemlistTitle, item, settings} = props;\n\n    return(\n        <List>\n            <h2>{itemlistTitle}</h2>\n            {Boolean(item.length) && <MovieItem item={item} settings={settings} />}\n        </List>\n    )\n}\n\n\nconst List = styled.div`\n  color: #fff;\n  padding: 15px 0;\n  h2 {\n    font-size: 15px;\n  }\n`\n\nexport default MovieList;","import styled from \"styled-components\";\n\nexport const MainArea = styled.div`\n  position: relative;\n  max-width: 93%;\n  margin: 0 auto;\n  padding: 40px 0;\n`","import React from \"react\";\nimport MovieList from \"../../components/MovieList\";\nimport {MainArea} from \"../../components/AppLayout/AppLayout.Styled\";\n\nfunction MainList(props){\n    const {\n        MovieListFilter = {},\n        isLoggedIn,\n        nickname = \"\",\n        myList,\n        settings\n    } = props;\n\n    return(\n        <MainArea>\n            <MovieList\n                settings={settings}\n                itemlistTitle={\"인기 추천 컨텐츠\"}\n                item={MovieListFilter({el:\"recommend\", sorting:false})}/>\n            {\n                isLoggedIn && Boolean(myList.length) && (\n                    <MovieList\n                        settings={settings}\n                        itemlistTitle={`${nickname}님이 좋아하는 컨텐츠`}\n                        item={MovieListFilter({el:\"myList\", sorting:false})}/>\n                )\n            }\n            <MovieList\n                itemlistTitle={\"드라마\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Drama\"})}/>\n            <MovieList\n                itemlistTitle={\"코미디 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Comedy\"})}/>\n        </MainArea>\n    )\n}\n\n\nexport default MainList;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport MovieListController from \"../../components/MovieList/MovieListController\";\nimport MainList from \"./MainList\";\n\nfunction Home() {\n    const {\n        app : {Movies = [], bestMovies = []},\n        user : {isLoggedIn = false, LoginData : {myList = [], nickname = \"\"}}\n    } = useSelector(state => state);\n\n    const [MovieListFilter] = MovieListController({Movies, myList, bestMovies});\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 7,\n        slidesToScroll: 7,\n        touchMove: false,\n    };\n\n\n    return (\n        <MainList\n            MovieListFilter={MovieListFilter}\n            isLoggedIn={isLoggedIn}\n            nickname={nickname}\n            myList={myList}\n            settings={settings}\n        />\n    )\n}\n\nexport default Home;","import styled from \"styled-components\";\nimport {RiHeartAddLine} from \"react-icons/ri\";\n\nexport const MovieInfo = styled.div`\n`\nexport const ItemGroup = styled.div`\n  display: flex;\n\n  @media ${(props) => props.theme.mobile} {\n    flex-wrap: wrap;\n  }\n`\nexport const ColLeft = styled.div`\n`\nexport const PosterImage = styled.div`\n`\nexport const PosterIMG = styled.img`\n  width: 250px;\n\n  @media ${(props) => props.theme.mobile} {\n    width: 180px;\n  }\n`\nexport const ColRight = styled.div`\n  box-sizing: border-box;\n  padding: 0 50px;\n  font-size: 14px;\n  width: calc(100% - 250px);\n\n  @media ${(props) => props.theme.mobile} {\n    width: 100%;\n    padding: 20px 0;\n  }\n`\nexport const Title = styled.h2`\n  font-family: 'Montserrat', sans-serif;\n  font-size: 32px;\n  letter-spacing: -.3px;\n`\nexport const Year = styled.div`\n    margin: 15px 0px 0px;\n`\nexport const Rating = styled.div`\n    margin-bottom: 20px;\n`\nexport const Runtime = styled.div`\n    opacity: 0.5;\n`\nexport const Description = styled.div`\n  font-size: 15px;\n  margin: 20px 0 25px;\n  max-width: 600px;\n  line-height: 1.6;\n  opacity: 0.7;\n`\nexport const Genre = styled.div`\n    opacity: 0.5;\n`\nexport const Genres = styled.span`\n  + span {\n    margin-left: 5px;\n  }\n`\nexport const OtherMovies = styled.div`\n  overflow:hidden;\n  margin-top: 50px;\n  background: rgba(0,0,0,0.5);\n  padding: 35px 25px;\n  box-sizing: border-box;\n  h3 {\n    margin-bottom: 10px;\n  }\n`\nexport const OtherMovieList = styled.div`\n`\nexport const LikeButton = styled.button`\n  font-size: 15px;\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  transition: .4s;\n\n  span {\n    margin-left: 8px;\n  }\n\n  &:not(.active):hover {\n    opacity: 0.5;\n  }\n\n  svg {\n    animation: bounceHeart 1s 2 ease-out;\n  }\n  &.active {\n    color: #34b56b;\n  }\n`\nexport const HeartIcon = styled(RiHeartAddLine)`\n  font-size: 20px;\n  transition: animation .4s;\n  @keyframes bounceHeart {\n    0% {transform: translateY(0px)}\n    50% {transform: translateY(-3px)}\n    100% {transform: translateY(0px)}\n  }\n`","import React from \"react\";\nimport {\n    Description, Genre, Genres, ItemGroup, ColLeft, ColRight, PosterImage,\n    PosterIMG, MovieInfo, OtherMovieList, OtherMovies, Rating, Runtime, Title, Year,\n    LikeButton, HeartIcon\n} from \"./MovieDetail.Styled\";\nimport MovieItem from \"../../components/MovieList/MovieItem\";\nimport {FaCheckCircle} from \"react-icons/fa\";\nimport cn from \"classnames\";\n\nfunction MovieDetail(props){\n    const {\n        post, otherPost, isLiked, isLoggedIn, toggleLikeButton, settings\n    } = props;\n\n\n    return(\n        <MovieInfo>\n            <ItemGroup>\n                <ColLeft>\n                    <PosterImage><PosterIMG src={post.medium_cover_image} alt=\"\"/></PosterImage>\n                    {\n                        isLoggedIn &&\n                        <LikeButton\n                            type=\"button\"\n                            onClick={() => toggleLikeButton(isLiked)}\n                            className={cn({active: isLiked})}>\n                            {isLiked ? <AddedLikeList /> : <AddLikeList />}\n                        </LikeButton>\n                    }\n                </ColLeft>\n                <ColRight>\n                    <Title>{post.title_long}</Title>\n                    <Year>{post.year}</Year>\n                    <Rating>\n                        별점 : ⭐{post.rating}\n                    </Rating>\n                    <Description>{post.description_full}</Description>\n                    <Runtime>전체 : {post.runtime}분</Runtime>\n                    <Genre>\n                        장르 :\n                        {\n                            post.genres && post.genres.map((i,idx) => {\n                                return <Genres key={idx}>{i}</Genres>\n                            })\n                        }\n                    </Genre>\n                    <OtherMovies>\n                        <h3>{post.title} 와 비슷한 작품</h3>\n                        {\n                            otherPost &&\n                            typeof(otherPost) !== undefined && otherPost.length &&\n                            <MovieItem item={otherPost} settings={settings} />\n                        }\n                        <OtherMovieList>\n                        </OtherMovieList>\n                    </OtherMovies>\n                </ColRight>\n            </ItemGroup>\n        </MovieInfo>\n    )\n}\n\n\nfunction AddedLikeList() {\n    return (\n        <><FaCheckCircle /> <span>보관함에 추가됨</span></>\n    )\n}\n\nfunction AddLikeList() {\n    return (\n        <><HeartIcon /> <span>보관함에 추가</span></>\n    )\n}\n\n\n\nexport default MovieDetail;","import styled from \"styled-components\";\nimport {MainArea} from \"../../components/AppLayout/AppLayout.Styled\";\n\nexport const DetailGroup = styled.div`\n  position: relative;\n  min-height: 100vh;\n  background: #202020 ${(props) => props.background && `url(${props.background})`} no-repeat center top /cover fixed;\n  transition: background-image 0.5s .1s;\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n  }\n`\nexport const MainAreaStyled = styled(MainArea)`\n    z-index: 2;\n`","import React, {useState, useEffect} from \"react\";\nimport {userActions} from \"../../../redux/actionCreators\";\nimport {descendingSort} from \"../../../utils/common\";\n\nfunction DetailController(id, Movies, myList){\n    const [isLiked, setIsLiked] = useState(false);\n    const [post, setPost] = useState({});\n    const [otherPost, setOtherPost] = useState({});\n\n    useEffect(() => {\n        //post 정의\n        const postResult = Movies.length && Movies.find((i) => id === i.id);\n        setPost(postResult);\n    }, [Movies, id]);\n\n\n    useEffect(() => {\n        //<myList>에 있는 게시글인지 체크, otherPost 생성 및 sorting\n        const likedListResult = post && Boolean(myList.find((item) => item === post.id));\n\n        const genreArr = post.genres;\n        const otherPostResult = genreArr && Movies.filter((item) => {\n            for(let i=0; i<genreArr.length; i++){\n                if(item.genres.indexOf(genreArr[i]) !== -1 && post.id !== item.id) return true;\n            }\n        });\n        const result = descendingSort(otherPostResult, \"rating\");\n\n        setIsLiked(likedListResult);\n        setOtherPost(result);\n    }, [post]);\n\n\n    const toggleLikeButton = (state) => {\n        //보관함 토글 버튼\n        setIsLiked(!state);\n        if(myList.includes(post.id)){\n            userActions.removeMyList(post.id);\n        } else {\n            userActions.addMyList(post.id);\n        }\n    };\n\n    return [post, otherPost, isLiked, toggleLikeButton];\n}\n\nexport default DetailController;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport MovieDetail from \"./MovieDetail\";\nimport {DetailGroup, MainAreaStyled} from \"./index.Styled\";\nimport DetailController from \"./DetailController\";\n\nfunction Detail(props){\n    const {match} = props;\n    const id = Number(match.params.id);\n    const {\n        app : {Movies = []},\n        user : {\n            LoginData: {myList = []},\n            isLoggedIn\n        }\n    } = useSelector(state => state);\n\n    const [post, otherPost, isLiked, toggleLikeButton] = DetailController(id, Movies, myList);\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 6,\n        slidesToScroll: 6,\n        touchMove: false,\n    };\n\n\n    return(\n        <DetailGroup background={post.background_image_original}>\n            <MainAreaStyled>\n                <MovieDetail\n                    post={post}\n                    otherPost={otherPost}\n                    isLiked={isLiked}\n                    isLoggedIn={isLoggedIn}\n                    toggleLikeButton={toggleLikeButton}\n                    settings={settings}\n                />\n            </MainAreaStyled>\n        </DetailGroup>\n    )\n}\n\nexport default Detail;","import React from \"react\";\nimport MovieList from \"../../components/MovieList\";\nimport {MainArea} from \"../../components/AppLayout/AppLayout.Styled\";\n\nfunction GenreList(props){\n    const {\n        MovieListFilter = {},\n        settings\n    } = props;\n\n    return(\n        <MainArea>\n            <MovieList\n                itemlistTitle={\"드라마\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Drama\"})}/>\n            <MovieList\n                itemlistTitle={\"코미디 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Comedy\"})}/>\n            <MovieList\n                itemlistTitle={\"다큐멘터리 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Documentary\"})}/>\n            <MovieList\n                itemlistTitle={\"판타지 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Fantasy\"})}/>\n            <MovieList\n                itemlistTitle={\"음악 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Music\"})}/>\n            <MovieList\n                itemlistTitle={\"로맨스 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Romance\"})}/>\n            <MovieList\n                itemlistTitle={\"액션 영화\"}\n                settings={settings}\n                item={MovieListFilter({el:\"genres\", val:\"Action\"})}/>\n        </MainArea>\n    )\n}\n\n\nexport default GenreList;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport MovieListController from \"../../components/MovieList/MovieListController\";\nimport GenreList from \"./GenreList\";\n\nfunction Genre() {\n    const {\n        app : {Movies = []},\n    } = useSelector(state => state);\n\n    const [MovieListFilter] = MovieListController({Movies});\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 7,\n        slidesToScroll: 7,\n        touchMove: false,\n    };\n\n\n    return (\n        <GenreList\n            MovieListFilter={MovieListFilter}\n            settings={settings}\n        />\n    )\n}\n\nexport default Genre;","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Search(){\n    \n    return(\n        <Container>\n            Search\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n\n`\n\nexport default Search;","import styled from \"styled-components\";\nimport {Form} from \"antd\";\n\nexport const Container = styled.div`\n  background: #202020 ${(props) => props.background && `url(${props.background})`} no-repeat center top /cover fixed;\n  transition: background-image 0.5s .1s;\n  height: 100vh;\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  color: #fff;\n  position: relative;\n  &:before {\n    content: '';\n    width: 100%;\n    height: 100%;\n    z-index: 1;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n  }\n`\nexport const LoginGroup = styled.div`\n  position: relative;\n  z-index: 2;\n  h2 {\n    font-family: 'Montserrat', sans-serif;\n    font-size: 15px;\n    margin-bottom: 10px;\n    font-weight: 500;\n    letter-spacing: -.2px;\n  }\n`\nexport const FormStyled = styled(Form)`\n  width: 300px;\n\n  .ant-form-item {\n    color: #fff;\n  }\n\n  .ant-btn {\n    width: 100%;\n  }\n\n  .user-name {\n    margin-bottom: 12px;\n  }\n\n  .login-form-link {\n    color: #fff;\n    text-decoration: underline;\n    font-family: 'Montserrat', sans-serif;\n  }\n  \n`","import React from \"react\";\nimport {Form, Input, Button} from \"antd\";\nimport {UserOutlined, LockOutlined} from '@ant-design/icons';\nimport {Container, FormStyled, LoginGroup} from \"./index.Styled\";\nimport {Link} from \"react-router-dom\";\n\nfunction LoginForm(props) {\n    const {\n        form, background, handleSubmit\n    } = props;\n\n    return (\n        <Container background={background}>\n            <LoginGroup>\n                <h2>Member Login</h2>\n                <FormStyled\n                    name=\"normal_login\"\n                    className=\"login-form\"\n                    form={form}\n                    onFinish={handleSubmit}\n                >\n                    <Form.Item\n                        name=\"userId\"\n                        className=\"user-name\"\n                    >\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\"/>} placeholder=\"Username\"/>\n                    </Form.Item>\n                    <Form.Item name=\"userPassword\">\n                        <Input\n                            prefix={<LockOutlined className=\"site-form-item-icon\"/>}\n                            type=\"password\"\n                            placeholder=\"Password\"\n                        />\n                    </Form.Item>\n\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-btn\">\n                            Log in\n                        </Button>\n                        or <Link to={\"/member/join\"} className=\"login-form-link\">register now!</Link>\n                    </Form.Item>\n                </FormStyled>\n            </LoginGroup>\n        </Container>\n    )\n}\n\n\nexport default LoginForm;","import {useEffect, useCallback, useState} from \"react\";\nimport {userActions} from \"../../../../redux/actionCreators\";\n\nfunction SubmitController(Users, form, history, isLoggedIn) {\n    const [isSuccessIn, setIsSuccessIn] = useState(false);\n\n    useCallback(() => {\n        if (isLoggedIn) {\n            alert('이미 로그인된 회원입니다.');\n            history.push(\"/\");\n            return false;\n        }\n    }, [isLoggedIn]);\n\n    useEffect(() => {\n        if (isSuccessIn) {\n            //<submit> 성공 후 실행할 목록\n            history.push(\"/\");\n            form.resetFields();\n            return false;\n        }\n    }, [isSuccessIn]);\n\n\n    const handleSubmit = (values) => {\n        setIsSuccessIn(false);\n\n        const result = Users.length && Users.find((item) => item.userId === values.userId);\n\n        if (result) {\n            if (result.userPassword === values.userPassword) {\n                alert('로그인 되었습니다.');\n                setIsSuccessIn(true);\n                userActions.updateState({\n                    isLoggedIn: true,\n                    LoginData: {\n                        id: result.id,\n                        userId: result.userId,\n                        nickname: result.nickname,\n                        myList: result.myList,\n                    }\n                })\n            } else {\n                if (values.userPassword) {\n                    alert('비밀번호가 일치하지 않습니다.');\n                    return false;\n                } else {\n                    alert('비밀번호 입력해주세요.');\n                    return false;\n                }\n            }\n        } else {\n            if (values.userId) {\n                alert('일치하는 아이디가 없습니다.');\n                return false;\n            } else {\n                alert('아이디를 입력해주세요.');\n                return false;\n            }\n        }\n    }\n\n    return [handleSubmit];\n}\n\nexport default SubmitController;\n","import React, {useEffect, useState} from \"react\";\nimport {Form} from \"antd\";\nimport {useSelector} from \"react-redux\";\nimport LoginForm from \"./LoginForm\";\nimport SubmitController from \"./SubmitController\";\n\n\nfunction Login({history}) {\n    const [form] = Form.useForm();\n    const [background, setBackground] = useState('');\n    const {\n        app: {Movies = []},\n        user: {Users = [], isLoggedIn = false}\n    } = useSelector(state => state);\n\n    useEffect(() => {\n        const result = Movies.length && Movies[Math.floor(Math.random() * Movies.length)].background_image_original;\n        result && setBackground(result);\n    }, [Movies]);\n\n    const [handleSubmit] = SubmitController(Users, form, history, isLoggedIn);\n\n\n    return (\n        <LoginForm\n            form={form}\n            background={background}\n            handleSubmit={handleSubmit}\n        />\n    )\n}\n\n\nexport default Login;","import React from \"react\";\nimport {MainArea} from \"../../../components/AppLayout/AppLayout.Styled\";\nimport MovieList from \"../../../components/MovieList\";\nimport styled from \"styled-components\";\n\nfunction MyMovieList(props){\n    const {\n        isLoggedIn, MovieListFilter, nickname, myList, settings\n    } = props;\n\n    return(\n        <MainArea>\n            {\n                isLoggedIn &&\n                <MovieList\n                    itemlistTitle={`${nickname}님이 좋아하는 컨텐츠`}\n                    settings={settings}\n                    item={MovieListFilter({el:\"myList\", sorting:false})}\n                    sorting={false}/>\n            }\n            {!myList.length && <ErrorMessage />}\n        </MainArea>\n    )\n}\n\nfunction ErrorMessage() {\n    return (\n        <Message>보관하신 컨텐츠가 없습니다.</Message>\n    )\n}\n\nconst Message = styled.div`\n  opacity: 0.2;\n  font-size: 14px;\n`\n\nexport default MyMovieList;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport MovieListController from \"../../../components/MovieList/MovieListController\";\nimport MyMovieList from \"./MyMovieList\";\n\nfunction MyList(){\n    const {\n        app : {Movies = []},\n        user : {isLoggedIn = false, LoginData : {myList = [], nickname = \"\"}}\n    } = useSelector(state => state);\n\n    const [MovieListFilter] = MovieListController({Movies, myList});\n\n    const settings = {\n        dots: false,\n        infinite: false,\n        speed: 500,\n        slidesToShow: 7,\n        slidesToScroll: 7,\n        touchMove: false,\n    };\n\n    return(\n        <MyMovieList\n            isLoggedIn={isLoggedIn}\n            MovieListFilter={MovieListFilter}\n            nickname={nickname}\n            myList={myList}\n            settings={settings}\n        />\n    )\n}\n\n\nexport default MyList;","import styled from \"styled-components\";\nimport {Form} from \"antd\";\n\nexport const JoinGroup = styled.div`\n  max-width: 600px;\n  margin: 60px auto;\n  h2{\n    font-family: 'Montserrat', sans-serif;\n    font-size: 15px;\n    margin-bottom: 10px;\n    font-weight: 500;\n    letter-spacing: -.2px;\n  }\n`\nexport const FormStyled = styled(Form)`\n  .ant-form-item-label > label {\n    color: #fff;\n  }\n  .ant-form-item {\n    margin: 12px 0 0px;\n  }\n`\nexport const FormErrorMessage = styled.div`\n  color: ${(props) => props.theme.mainColor};\n  margin-top: 2px;\n`","import React from \"react\";\nimport {Form, Button, Input} from 'antd';\nimport {FormErrorMessage, FormStyled, JoinGroup} from \"./index.Styled\";\n\nfunction JoinForm(props) {\n    const {\n        form, handleSubmit,\n        handleOnChange, user, error,\n    } = props;\n\n    return (\n        <JoinGroup>\n            <h2>Member Join</h2>\n            <FormStyled form={form} onFinish={handleSubmit}>\n                <Form.Item name=\"username\">\n                    <Input\n                        placeholder=\"Username\"\n                        value={user.id}\n                        name=\"id\"\n                        onChange={(e) => handleOnChange(e)}\n                    />\n                </Form.Item>\n                {error.id && <FormErrorMessage>{error.id}</FormErrorMessage>}\n\n                <Form.Item name=\"password\">\n                    <Input.Password\n                        placeholder=\"Password\"\n                        type=\"password\"\n                        value={user.password}\n                        name=\"password\"\n                        onChange={(e) => handleOnChange(e)}\n                    />\n                </Form.Item>\n\n                {error.password && <FormErrorMessage>{error.password}</FormErrorMessage>}\n\n                <Form.Item name=\"verifyPassword\">\n                    <Input.Password\n                        placeholder=\"Verify Password\"\n                        type=\"password\"\n                        value={user.verifyPassword}\n                        name=\"verifyPassword\"\n                        onChange={(e) => handleOnChange(e)}\n                    />\n                </Form.Item>\n                {error.verifyPassword && <FormErrorMessage>{error.verifyPassword}</FormErrorMessage>}\n\n                <Form.Item name=\"nickname\">\n                    <Input\n                        placeholder=\"User Nickname\"\n                        value={user.nickname}\n                        name=\"nickname\"\n                        onChange={(e) => handleOnChange(e)}\n                    />\n                </Form.Item>\n                {error.nickname && <FormErrorMessage>{error.nickname}</FormErrorMessage>}\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Join\n                    </Button>\n                </Form.Item>\n            </FormStyled>\n        </JoinGroup>\n    )\n}\n\n\nexport default JoinForm;","const validId = (current, required) => {\n    if(!current && required) {\n        return \"필수 입력값 입니다.\"\n    }\n    if (current.length < 2) {\n        return \"최소 2자 이상 입력해주세요.\";\n    }\n    if (current.length > 20) {\n        return \"최대 20자까지 입력 가능합니다.\";\n    }\n    return null;\n};\n\nconst validPassword = (current, required) => {\n    if(!current && required) {\n        return \"필수 입력값 입니다.\";\n    }\n    if (current.length < 2) {\n        return \"최소 2자 이상 입력해주세요.\";\n    }\n    if (current.length > 20) {\n        return \"최대 20자까지 입력 가능합니다.\";\n    }\n    return null;\n};\n\nconst validVerifyPassword = (password, current) => {\n    if (password && password !== current){\n        return \"입력하신 비밀번호가 일치하지 않습니다.\";\n    }\n    if (password && current?.length < 2) {\n        return \"최소 2자 이상 입력해주세요.\";\n    }\n    if (password && current?.length > 20) {\n        return \"최대 20자까지 입력 가능합니다.\";\n    }\n    return null;\n};\n\nconst validNickname = (current, required) => {\n    if(!current && required) {\n        return \"필수 입력값 입니다.\";\n    }\n    if (current.length < 2) {\n        return \"최소 2자 이상 입력해주세요.\";\n    }\n    if (current.length > 20) {\n        return \"최대 20자까지 입력 가능합니다.\";\n    }\n    return null;\n};\n\nfunction validate({current, value, user, error, required}){\n    let newError = {};\n\n    if(current === \"id\" || !current & !value & required.id === true) {\n        newError.id = validId(current ? value : user.id, required.id);\n    }\n    if(current === \"password\" || !current & !value & required.password === true) {\n        newError.password = validPassword(current ? value : user.password, required.password);\n        newError.verifyPassword = validVerifyPassword(current ? value : user.password, user?.verifyPassword);\n    }\n    if(current === \"verifyPassword\" || !current & !value & required.verifyPassword === true) {\n        newError.verifyPassword = validVerifyPassword(user?.password, current ? value : user?.verifyPassword);\n    }\n    if(current === \"nickname\" || !current & !value & required.nickname === true) {\n        newError.nickname = validNickname(current ? value : user.nickname, required.nickname);\n    }\n\n    return {...error, ...newError};\n}\n\n\nexport default validate;","import {useCallback, useState} from \"react\";\nimport validate from \"../utils/validation\";\n\nfunction useForm(storeDispatch, buildDispatch, required) {\n    const [user, setUser] = useState({});\n    const [error, setError] = useState({});\n    const [isSuccessIn, setIsSuccessIn] = useState(false);\n\n\n    const handleOnChange = useCallback((e) => {\n        setIsSuccessIn(false);\n        let {name : current, value} = e.target;\n        const updateInfo = {...user, [current] : value};\n        setUser(updateInfo);\n\n        //현재 입력하는 값이 있기에 <current>로 검사\n        const result = validate({current, value, user, error, required});\n        setError(result);\n\n    }, [user, error]);\n\n\n    const handleSubmit = () => {\n\n        setIsSuccessIn(false);\n\n        //현재 입력하는 값이 없기에 기존 데이터 <user>로 검사\n        const result = validate({user, error, required});\n        setError(result);\n\n\n        const resultValue = Object.values(result);\n        const checkSubmit = Boolean(resultValue.length) && resultValue.every((i) => i === null);\n\n        if (checkSubmit) {\n            storeDispatch(buildDispatch(user));\n            setIsSuccessIn(true);\n        } else {\n            alert('오류가 발생하였습니다.');\n        }\n    };\n\n\n    return [user, setUser, error, setError, handleOnChange, handleSubmit, isSuccessIn];\n}\n\n\nexport default useForm;","import {useEffect} from \"react\";\nimport useForm from \"../../../../hooks/useForm\";\n\nfunction SubmitController(props) {\n    const {\n        form, required, isLoggedIn,\n        history, storeDispatch, buildDispatch\n    } = props;\n\n    const [\n        user, setUser, error, setError,\n        handleOnChange, handleSubmit,\n        isSuccessIn = false\n    ] = useForm(storeDispatch, buildDispatch, required);\n\n    useEffect(() => {\n        if(isLoggedIn) {\n            alert('이미 가입된 회원입니다.');\n            history.push(\"/\");\n            return false;\n        }\n    }, [isLoggedIn]);\n\n    useEffect(() => {\n        if(isSuccessIn) {\n            //<submit> 성공 후 실행할 목록\n            alert('회원가입이 완료되었습니다.');\n            setUser({});\n            setError({});\n            form.resetFields();\n            history.push(\"/member/login\");\n        }\n    }, [isSuccessIn]);\n\n\n    return [user, error, handleSubmit, handleOnChange];\n}\n\nexport default SubmitController;\n","import React from \"react\";\nimport {Form} from 'antd';\nimport {userActions} from \"../../../../redux/actionCreators\";\nimport {guid} from \"../../../../utils/common\";\nimport JoinForm from \"./JoinForm\";\nimport {useSelector} from \"react-redux\";\nimport SubmitController from \"./SubmitController\";\n\n\nfunction Join({history}) {\n    const {\n        isLoggedIn = false\n    } = useSelector(state => state.user);\n\n    const [form] = Form.useForm();\n    const required = {id : true, password : true, verifyPassword : true, nickname : true};\n\n    const storeDispatch = (obj) => userActions.addedUser(obj);\n    const buildDispatch = (arg) => ({\n        id : guid(),\n        userId : arg.id,\n        userPassword : arg.password,\n        nickname : arg.nickname,\n        myList: [],\n        SearchList: [],\n    });\n\n    const [user, error, handleSubmit, handleOnChange] = SubmitController({\n        form, required, isLoggedIn, history,\n        storeDispatch, buildDispatch\n    });\n\n\n    return (\n        <JoinForm\n            form={form}\n            handleSubmit={handleSubmit}\n            handleOnChange={handleOnChange}\n            user={user}\n            error={error}\n        />\n    )\n}\n\n\nexport default Join;","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Profile(){\n    \n    return(\n        <Container>\n            Profile\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n\n`\n\nexport default Profile;","import {useEffect} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {userActions} from \"../../../../redux/actionCreators\";\n\nfunction Logout({history}){\n    const {\n        isLoggedIn = false\n    } = useSelector(state => state.user);\n\n    useEffect(() => {\n        if(isLoggedIn) {\n            userActions.updateState({\n                LoginData: {},\n                isLoggedIn: false,\n            });\n            alert('로그아웃 되었습니다.');\n            history.push(\"/\");\n            return false;\n        } else {\n            alert('정상적인 경로가 아닙니다.');\n            history.push(\"/\");\n            return false;\n        }\n    }, []);\n\n    return null;\n}\n\nexport default Logout;","import React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport MyList from \"./MyList\";\nimport Join from \"./Join\";\nimport Profile from \"./Profile\";\nimport Logout from \"./Logout\";\n\nfunction Member({history}) {\n\n    return (\n        <Switch>\n            <Route path={\"/member/login\"} component={Login}/>\n            <Route path={\"/member/join\"} component={Join} history={history}/>\n            <Route path={\"/member/logout\"} component={Logout} history={history}/>\n            <Route path={\"/member/my-list\"} component={MyList}/>\n            <Route path={\"/member/profile\"} component={Profile}/>\n        </Switch>\n    )\n}\n\n\nexport default Member;","const size = {\n    mobile : \"767px\",\n    tabletStart : \"768px\",\n    tabletEnd : \"1279px\",\n    laptopStart : \"1280px\",\n    laptopEnd : \"1679px\",\n    desktop: \"1680px\"\n}\n\nconst theme = {\n    mainColor : '#c30000',\n    mobile : `screen and (max-width:${size.mobile})`,\n    tablet : `screen and (min-width:${size.tabletStart}) and (max-width:${size.tabletEnd})`,\n    laptop : `screen and (min-width:${size.laptopStart}) and (max-width:${size.laptopEnd})`,\n    desktop: `screen and (min-width:${size.desktop})`\n}\n\nexport default theme;","import {useEffect} from \"react\";\nimport {useLocation} from \"react-router-dom\";\n\nconst ScrollToTop = () => {\n    \n    const {pathname} = useLocation();\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n\n    return null;\n}\n\nexport default ScrollToTop;","import React, {useEffect} from \"react\";\nimport AppLayout from \"./views/components/AppLayout\";\nimport {Switch, Route} from \"react-router-dom\";\nimport Home from \"./views/pages/Home\";\nimport Detail from \"./views/pages/Detail\";\nimport Genre from \"./views/pages/Genre\";\nimport Search from \"./views/pages/Search\";\nimport {useSelector} from \"react-redux\";\nimport {appActions} from \"./redux/actionCreators\";\nimport Member from \"./views/pages/Member\";\nimport {ThemeProvider} from \"styled-components\";\nimport theme from \"./style/theme\";\nimport ScrollToTop from \"./utils/scrollToTop\";\nimport {AnimatedSwitch} from \"react-router-transition\";\n\n\nfunction App(){\n    const {\n        Movies = []\n    } = useSelector(state => state?.app);\n\n    useEffect(() => {\n        if(!Movies.length) {\n            console.log('@@APP/GET_MOVIES');\n            appActions.getMovies();\n        }\n    }, []);\n\n    return(\n        <ThemeProvider theme={theme}>\n            <ScrollToTop />\n            <AppLayout>\n                <Switch>\n                    <AnimatedSwitch\n                        atEnter={{ opacity: 0 }}\n                        atLeave={{ opacity: 0 }}\n                        atActive={{ opacity: 1 }}\n                        className=\"switch-wrapper\"\n                    >\n                        <Route exact path={\"/\"} component={Home}/>\n                        <Route path={\"/detail/:id\"} component={Detail}/>\n                        <Route path={\"/genre\"} component={Genre}/>\n                        <Route path={\"/search\"} component={Search}/>\n                        <Route path={\"/member\"} component={Member}/>\n                    </AnimatedSwitch>\n                </Switch>\n            </AppLayout>\n        </ThemeProvider>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./style/app.scss\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router basename={process.env.REACT_APP_SITE_URL}>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}